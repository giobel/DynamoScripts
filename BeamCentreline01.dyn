<Workspace Version="1.3.2.2480" X="464.258493709657" Y="-676.073907240699" zoom="0.781462675187327" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Nodes.DSModelElementSelection guid="8b65b90f-b51e-4567-9915-65894f0d16a4" type="Dynamo.Nodes.DSModelElementSelection" nickname="Select Model Element" x="-379.596491309263" y="797.058381541287" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-00217e95" />
    </Dynamo.Nodes.DSModelElementSelection>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="f69bd1a7-2601-4a01-b3c1-6695117b463a" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Faces" x="261" y="454" isVisible="false" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="RevitNodes.dll" function="Revit.Elements.Element.Faces">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="d823d3ec-37bb-4c36-9738-e930523e624b" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Surface.Area" x="591" y="452" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Surface.Area">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="02cfc81a-e256-48ff-b59a-4d95c07b9792" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.GetItemAtIndex" x="931.774018180431" y="263.326660565833" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.List.GetItemAtIndex@var[]..[],int">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="675c7aff-805c-4775-96d4-e992dc468e58" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="820.834499520449" y="359.350727786863" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="0..1;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="6115fb63-3b19-45b9-b1e6-0d8e2d510bcb" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Surfaces.DeconstructSurface" x="453.345985238227" y="102.330566470004" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="..\AppData\Roaming\Dynamo\Dynamo Revit\1.3\packages\LunchBox for Dynamo\bin\LunchBox.dll" function="Geometry.Surfaces.DeconstructSurface@Autodesk.DesignScript.Geometry.Surface">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="a6fea02f-4b25-4529-8920-c127b88ee6d0" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Geometry.BoundingBox" x="1330.05788928764" y="470.768025266854" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Geometry.BoundingBox">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="ed9abef2-c9a5-45f2-a4a2-17da4bed9479" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Polygon.Center" x="1336.32864677316" y="133.401272545927" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Polygon.Center">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="c1d44042-270b-450e-bad3-6a7ef55c7fd6" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="BoundingBox.Properties" x="1752.70694381162" y="429.317240642788" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true">
      <PortInfo index="0" default="False" />
      <ID value="119fed50-cf6e-435e-9841-59ee18cb7d50" />
      <Name value="BoundingBox.Properties" />
      <Description value="Retrieves the centroid, width, depth and height of a given bounding box" />
      <Inputs>
        <Input value="boundingBox" />
      </Inputs>
      <Outputs>
        <Output value="Centroid" />
        <Output value="Width" />
        <Output value="Depth" />
        <Output value="Height" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="fc794f23-e259-4817-a79b-cccd19ca8ffa" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Line.ByStartPointEndPoint" x="904.426699580464" y="1351.63666955199" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="a70f532f-92b3-452f-8fec-97a8e5b35d73" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.Deconstruct" x="559.701349949539" y="1328.250181527" isVisible="true" isUpstreamVisible="true" lacing="Longest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.List.Deconstruct@var[]..[]">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="fc2d3df9-d02b-4e4f-a8ee-e978f0d1dff4" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="ModelCurve.ByCurve" x="1241.76263591201" y="1363.1248107583" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="RevitNodes.dll" function="Revit.Elements.ModelCurve.ByCurve@Autodesk.DesignScript.Geometry.Curve">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <PythonNodeModels.PythonNode guid="fd1a69bb-10a3-48e5-a034-d8670b91180d" type="PythonNodeModels.PythonNode" nickname="Python Script" x="-307.926402751733" y="1000.40990034487" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
import sys

# Import RevitAPI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
# Import RevitAPIUI
clr.AddReference('RevitAPIUI')
# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


clr.AddReference("RevitNodes")
import Revit
# Import ToProtoType, ToRevitType geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)



# Import Dynamo Python References
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Assign Labels to Revit Document and Application
doc = DocumentManager.Instance.CurrentDBDocument
app = DocumentManager.Instance.CurrentUIApplication.Application


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application


beam = UnwrapElement(IN[0])

def GetBeamExactCurve(beam):
	opt = Options()
	opt.ComputeReferences = True
	opt.IncludeNonVisibleObjects = True
	opt.View = doc.ActiveView

	geo = beam.get_Geometry(opt)
	solids = []
	
	for item in geo:
		try:
			solids.append(item.GetInstanceGeometry())
		except:
			""
	faces = [solid.Faces for solid in solids[0]]
	bb1 = faces[1][0].Origin
	bb2 = faces[1][1].Origin
	return [bb1.ToPoint(), bb2.ToPoint()]

errors = []

for b in beam:
	try:
		GetBeamExactCurve(b)
	except:
		errors.append(b)
		
OUT = errors</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="c84cd0b2-4451-49eb-b80e-9eda2d5111b1" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="ModelCurve.ByCurve" x="234.464379540817" y="855.169363365382" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="RevitNodes.dll" function="Revit.Elements.ModelCurve.ByCurve@Autodesk.DesignScript.Geometry.Curve">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <PythonNodeModels.PythonNode guid="fbb92e91-d8bb-4213-8f67-b0c4e57bdbf8" type="PythonNodeModels.PythonNode" nickname="Python Script" x="786.86684406932" y="980.840497651379" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># Default imports
import clr

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

#The input to this node will be stored in the IN[0] variable.

doc =  DocumentManager.Instance.CurrentDBDocument
app =  DocumentManager.Instance.CurrentUIApplication.Application

solids = IN[0]

faces = []
edges = []
vertices = []
if hasattr(solids, "__iter__"):
	for solid in solids:
		if hasattr(solid, "__iter__"):
			for sol in solid:
				fcs = []
				edgs = []
				verts = []
				for face in solid.Faces:
					fcs.append(face)
	
				for edge in solid.Edges:
					crv = edge.AsCurve()
					edgs.append(crv)
		
					pt = crv.Evaluate(0, True)
					verts.append(pt)
		
				faces.append(fcs)
				edges.append(edgs)
				vertices.append(verts)
		else:
			fcs = []
			edgs = []
			verts = []
			for face in solid.Faces:
				fcs.append(face)
	
			for edge in solid.Edges:
				crv = edge.AsCurve()
				edgs.append(crv)
		
				pt = crv.Evaluate(0, True)
				verts.append(pt)
		
			faces.append(fcs)
			edges.append(edgs)
			vertices.append(verts)
else:
	fcs = []
	edgs = []
	verts = []
	for face in solids.Faces:
		fcs.append(face)
	
	for edge in solids.Edges:
		crv = edge.AsCurve()
		edgs.append(crv)
		
		pt = crv.Evaluate(0, True)
		verts.append(pt)
		
	faces.append(fcs)
	edges.append(edgs)
	vertices.append(verts)

	
	
output = []
output.append(faces)
output.append(edges)
output.append(vertices)
	

#Assign your output to the OUT variable
OUT = output</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="350a0a31-93a0-4811-af8f-5d94870012ab" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="243.343506164323" y="979.309147073995" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" CodeText="a[0];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="e5b0116a-b9c8-45a2-8759-12926a96590a" type="PythonNodeModels.PythonNode" nickname="Python Script" x="472.692050422975" y="1031.75089751509" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
import sys

# Import RevitAPI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
# Import RevitAPIUI
clr.AddReference('RevitAPIUI')
# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


clr.AddReference("RevitNodes")
import Revit
# Import ToProtoType, ToRevitType geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)



# Import Dynamo Python References
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Assign Labels to Revit Document and Application
doc = DocumentManager.Instance.CurrentDBDocument
app = DocumentManager.Instance.CurrentUIApplication.Application


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application


solids = UnwrapElement(IN[0])

opt = Options()
opt.ComputeReferences = True
opt.IncludeNonVisibleObjects = True
opt.View = doc.ActiveView

faces = []
fcs = []

if hasattr(solids, "__iter__"):
	for solid in solids:
		fcs = []
		edgs = []
		verts = []
		for face in solid.Faces:
			fcs.append(face)
		faces.append(fcs)


else:
	""
	
new = []

#if hasattr(solids, "__iter__"):

for solid in solids:
	for face in solid.Faces:
		new.append(face)

OUT = new</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Nodes.DSModelElementsSelection guid="712e792c-0ed0-4233-8c5b-5dd376d523e7" type="Dynamo.Nodes.DSModelElementsSelection" nickname="Select Model Elements" x="-759.251101888473" y="1157.64840014085" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="true">
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-00217627" />
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-002177c1" />
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-002177c3" />
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-002177c7" />
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-00217aa9" />
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-00217aab" />
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-00217ac7" />
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-00217c19" />
      <instance id="5bf27d9a-7308-4ed5-af2b-22cee417187f-0023726f" />
      <instance id="4fd2258f-623f-46ca-993a-9786b2472e7b-0034ab0f" />
    </Dynamo.Nodes.DSModelElementsSelection>
    <PythonNodeModels.PythonNode guid="6f39c7fc-1187-48e3-99aa-df4d2ec0bcf7" type="PythonNodeModels.PythonNode" nickname="Python Script" x="-20.1676564351061" y="1939.30777735187" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
import sys

# Import RevitAPI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
# Import RevitAPIUI
clr.AddReference('RevitAPIUI')
# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


clr.AddReference("RevitNodes")
import Revit
# Import ToProtoType, ToRevitType geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)



# Import Dynamo Python References
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Assign Labels to Revit Document and Application
doc = DocumentManager.Instance.CurrentDBDocument
app = DocumentManager.Instance.CurrentUIApplication.Application


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application


beam = UnwrapElement(IN[0])

def GetBeamExactCurve(beam):
	opt = Options()
	opt.ComputeReferences = True
	opt.IncludeNonVisibleObjects = True
	#opt.View = doc.ActiveView
	opt.DetailLevel = ViewDetailLevel.Medium
	
	geo = beam.get_Geometry(opt)
	solids = []
	
	for item in geo:
		try:
			solids.append(item.GetInstanceGeometry())
		except:
			""
	faces = [solid.Faces for solid in solids[0]]
	bb1 = faces[1][0].Origin
	bb2 = faces[1][1].Origin
	return [bb1.ToPoint(), bb2.ToPoint()]

errors = []
pts = []
for b in beam:
	try:
		pts.append(GetBeamExactCurve(b))
	except:
		errors.append(b)
		
OUT = pts, errors</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Nodes.DSModelElementsSelection guid="595d2383-93b8-4090-8e0e-b089ddf0bb61" type="Dynamo.Nodes.DSModelElementsSelection" nickname="Select Model Elements" x="-752.394331867159" y="1842.73992377548" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="true">
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-00217627" />
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-002177c1" />
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-00217c19" />
      <instance id="5bf27d9a-7308-4ed5-af2b-22cee417187f-0023726f" />
      <instance id="4fd2258f-623f-46ca-993a-9786b2472e7b-0034ab0f" />
    </Dynamo.Nodes.DSModelElementsSelection>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="3379a402-7113-46fc-b36c-2402ea5b6152" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-105.103670731334" y="1786.51721114372" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="{a};" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="78b6124e-b769-445e-b782-84597b5fba11" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="344.915534804218" y="1456.0163141421" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" CodeText="a[0];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="763ff6a0-f17f-4ec2-abea-6c9b08a79b1a" type="PythonNodeModels.PythonNode" nickname="Python Script" x="913.562123340663" y="1958.55602448375" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
import sys

# Import RevitAPI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
# Import RevitAPIUI
clr.AddReference('RevitAPIUI')
# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


clr.AddReference("RevitNodes")
import Revit
# Import ToProtoType, ToRevitType geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)



# Import Dynamo Python References
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Assign Labels to Revit Document and Application
doc = DocumentManager.Instance.CurrentDBDocument
app = DocumentManager.Instance.CurrentUIApplication.Application


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application


beam = UnwrapElement(IN[0])

def GetBeamExactCurve(beam):
	opt = Options()
	opt.ComputeReferences = True
	opt.IncludeNonVisibleObjects = True
	#opt.View = doc.ActiveView
	opt.DetailLevel = ViewDetailLevel.Medium
	
	geo = beam.get_Geometry(opt)
	solids = []
	
	for item in geo:
		try:
			solids.append(item.GetInstanceGeometry())
		except:
			""
	faces = [solid.Faces for solid in solids[0]]
	bb1 = faces[1][0].Origin
	bb2 = faces[1][1].Origin
	return [bb1.ToPoint(), bb2.ToPoint()]

errors = []
pts = []
for b in beam:
	try:
		pts.append(GetBeamExactCurve(b))
	except:
		errors.append(b)
		
OUT = pts, errors</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="d0d769d6-0d96-4e89-ba3d-32a47ac74a15" type="PythonNodeModels.PythonNode" nickname="Python Script" x="531.485598242939" y="1872.75029544918" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
import sys

# Import RevitAPI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
# Import RevitAPIUI
clr.AddReference('RevitAPIUI')
# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


clr.AddReference("RevitNodes")
import Revit
# Import ToProtoType, ToRevitType geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)



# Import Dynamo Python References
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Assign Labels to Revit Document and Application
doc = DocumentManager.Instance.CurrentDBDocument
app = DocumentManager.Instance.CurrentUIApplication.Application


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application


beam = UnwrapElement(IN[0])

opt = Options()
opt.ComputeReferences = True
opt.IncludeNonVisibleObjects = True
#opt.View = doc.ActiveView
opt.DetailLevel = ViewDetailLevel.Medium

geoObj = []



def GetBeamExactCurve(beam):
	opt = Options()
	opt.ComputeReferences = True
	opt.IncludeNonVisibleObjects = True
	#opt.View = doc.ActiveView
	opt.DetailLevel = ViewDetailLevel.Medium
	
	geo = beam.get_Geometry(opt)
	solids = []
	
	for item in geo:
		try:
			solids.append(item.GetInstanceGeometry())
		except:
			""
	faces = [solid.Faces for solid in solids[0]]
	bb1 = faces[1][0].Origin
	bb2 = faces[1][1].Origin
	return [bb1.ToPoint(), bb2.ToPoint()]



def BeamEndPoints_SolidGeom(beam):
	opt = Options()
	opt.ComputeReferences = True
	opt.IncludeNonVisibleObjects = True
	#opt.View = doc.ActiveView
	opt.DetailLevel = ViewDetailLevel.Medium
	pts = []
	geo = beam.get_Geometry(opt)
	for g in geo:
		try:
			pts.append([g.Faces[0].Origin.ToPoint(),g.Faces[1].Origin.ToPoint()])
		except:
			""
	return pts[0]



solids = []
pts = []
errors = []
"""
for b in beam:
	geo = b.get_Geometry(opt)
	for g in geo:
		try:
			geoObj.append([g.Faces[0].Origin.ToPoint(),g.Faces[1].Origin.ToPoint()])
		except:
			""
"""


OUT = [GetBeamExactCurve2(b) for b in beam]</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="a59240f5-4d4a-4918-a2c0-53cda21b16a3" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="207.204743368165" y="1875.89662118167" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" CodeText="a[1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="28faa668-3bc3-4d75-bdac-f38bea8c8a8a" type="PythonNodeModels.PythonNode" nickname="Python Script" x="-271.840495739984" y="2102.43212960416" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
import sys

# Import RevitAPI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
# Import RevitAPIUI
clr.AddReference('RevitAPIUI')
# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


clr.AddReference("RevitNodes")
import Revit
# Import ToProtoType, ToRevitType geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)



# Import Dynamo Python References
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Assign Labels to Revit Document and Application
doc = DocumentManager.Instance.CurrentDBDocument
app = DocumentManager.Instance.CurrentUIApplication.Application


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application


beam = UnwrapElement(IN[0])

opt = Options()
opt.ComputeReferences = True
opt.IncludeNonVisibleObjects = True
#opt.View = doc.ActiveView
opt.DetailLevel = ViewDetailLevel.Medium

geoObj = []



def GetBeamExactCurve(beam):
	opt = Options()
	opt.ComputeReferences = True
	opt.IncludeNonVisibleObjects = True
	#opt.View = doc.ActiveView
	opt.DetailLevel = ViewDetailLevel.Medium
	
	geo = beam.get_Geometry(opt)
	solids = []
	
	for item in geo:
		try:
			solids.append(item.GetInstanceGeometry())
		except:
			""
	faces = [solid.Faces for solid in solids[0]]
	bb1 = faces[1][0].Origin
	bb2 = faces[1][1].Origin
	return [bb1.ToPoint(), bb2.ToPoint()]



for b in beam:
	geo = b.get_Geometry(opt)
	try:
		for g in geo:
			geoObj.append([g.Faces[0].Origin.ToPoint(),g.Faces[1].Origin.ToPoint()])
	except:
		for item in geo:
			try:
				solids = item.GetInstanceGeometry()
				faces = [solid.Faces for solid in solids[0]]
				bb1 = faces[1][0].Origin
				bb2 = faces[1][1].Origin
				geoObj.append(bb1.ToPoint(), bb2.ToPoint())
			except:
				""

		
OUT = geoObj</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="f3b00cd7-f134-4923-9d1a-e215dacb7db6" type="PythonNodeModels.PythonNode" nickname="Python Script" x="-295.936507219106" y="2517.30966288573" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
import sys

# Import RevitAPI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
# Import RevitAPIUI
clr.AddReference('RevitAPIUI')
# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


clr.AddReference("RevitNodes")
import Revit
# Import ToProtoType, ToRevitType geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)



# Import Dynamo Python References
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Assign Labels to Revit Document and Application
doc = DocumentManager.Instance.CurrentDBDocument
app = DocumentManager.Instance.CurrentUIApplication.Application


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application


beam = UnwrapElement(IN[0])

def GetBeamExactCurve(beam):
	opt = Options()
	opt.ComputeReferences = True
	opt.IncludeNonVisibleObjects = True
	#opt.View = doc.ActiveView
	opt.DetailLevel = ViewDetailLevel.Medium
	
	geo = beam.get_Geometry(opt)
	solids = []
	pts = []
	for item in geo:
		try:
			solids = item.GetInstanceGeometry()
			faces = [solid.Faces for solid in solids[0]]
			bb1 = faces[1][0].Origin
			bb2 = faces[1][1].Origin
			pts.append(bb1.ToPoint(), bb2.ToPoint())
		except:
#			pts.append([item.Faces[0].Origin.ToPoint(),item.Faces[1].Origin.ToPoint()])
			""
	return pts

errors = []
pts = []
for b in beam:
	try:
		pts.append(GetBeamExactCurve(b))
	except:
		errors.append(b)
		
OUT = pts, errors</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="8e2f2833-afd1-40f2-bd54-ad63ee720914" type="PythonNodeModels.PythonNode" nickname="Python Script" x="302.375236125785" y="2141.98754388205" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
import sys

# Import RevitAPI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
# Import RevitAPIUI
clr.AddReference('RevitAPIUI')
# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


clr.AddReference("RevitNodes")
import Revit
# Import ToProtoType, ToRevitType geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)



# Import Dynamo Python References
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Assign Labels to Revit Document and Application
doc = DocumentManager.Instance.CurrentDBDocument
app = DocumentManager.Instance.CurrentUIApplication.Application


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

opt = Options()
opt.ComputeReferences = True
opt.IncludeNonVisibleObjects = True
#opt.View = doc.ActiveView
opt.DetailLevel = ViewDetailLevel.Medium


beam = UnwrapElement(IN[0])
geo = []

bol = []

for b in beam:
	geo = b.get_Geometry(opt)
	for g in geo:
		bol.append(g.GetType().ToString())
		
OUT = bol</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="a26f844b-f1dd-4da9-8eb1-eb9239de5cc6" type="PythonNodeModels.PythonNode" nickname="Python Script" x="-115.045791482695" y="1337.4035680981" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
import sys

# Import RevitAPI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
# Import RevitAPIUI
clr.AddReference('RevitAPIUI')
# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


clr.AddReference("RevitNodes")
import Revit
# Import ToProtoType, ToRevitType geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)



# Import Dynamo Python References
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Assign Labels to Revit Document and Application
doc = DocumentManager.Instance.CurrentDBDocument
app = DocumentManager.Instance.CurrentUIApplication.Application


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

opt = Options()
opt.ComputeReferences = True
opt.IncludeNonVisibleObjects = True
#opt.View = doc.ActiveView
opt.DetailLevel = ViewDetailLevel.Medium


beam = UnwrapElement(IN[0])

def BeamEndPoints_SolidGeom(beam):
	opt = Options()
	opt.ComputeReferences = True
	opt.IncludeNonVisibleObjects = True
	#opt.View = doc.ActiveView
	opt.DetailLevel = ViewDetailLevel.Medium
	pts = []
	geo = beam.get_Geometry(opt)
	for g in geo:
		try:
			pts.append([g.Faces[0].Origin.ToPoint(),g.Faces[1].Origin.ToPoint()])
		except:
			""
	return pts[0]



def BeamEndPoints_InstaGeom(beam):
	opt = Options()
	opt.ComputeReferences = True
	opt.IncludeNonVisibleObjects = True
	#opt.View = doc.ActiveView
	opt.DetailLevel = ViewDetailLevel.Medium
	
	geo = beam.get_Geometry(opt)
	solids = []
	
	for item in geo:
		try:
			solids.append(item.GetInstanceGeometry())
		except:
			""
	faces = [solid.Faces for solid in solids[0]]
	bb1 = faces[1][0].Origin
	bb2 = faces[1][1].Origin
	return [bb1.ToPoint(), bb2.ToPoint()]




geo = []

bol = []

for b in beam:
	geo = b.get_Geometry(opt)
	subList = []
	bol.append(subList)
	for g in geo:
		if g.GetType().ToString() == "Autodesk.Revit.DB.Solid":
			subList.append("Solid")
		else:
			subList.append("Instance")
newList = []


for v,b in zip(bol,beam):
	if "Solid" in v:
		newList.append(BeamEndPoints_SolidGeom(b))
	else:
		newList.append(BeamEndPoints_InstaGeom(b))
			

	
OUT = newList</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="5fc2b936-5957-4b09-b4e6-ed9b37dddb52" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="String.Contains" x="808.456193095471" y="2176.88968709223" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.String.Contains@string,string,bool">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="47581ed1-bf80-4790-bb76-1fb2f08d7bf0" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="649" y="2235" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;Solid&quot;;" ShouldFocus="false" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="f69bd1a7-2601-4a01-b3c1-6695117b463a" start_index="0" end="d823d3ec-37bb-4c36-9738-e930523e624b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f69bd1a7-2601-4a01-b3c1-6695117b463a" start_index="0" end="02cfc81a-e256-48ff-b59a-4d95c07b9792" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f69bd1a7-2601-4a01-b3c1-6695117b463a" start_index="0" end="6115fb63-3b19-45b9-b1e6-0d8e2d510bcb" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="675c7aff-805c-4775-96d4-e992dc468e58" start_index="0" end="02cfc81a-e256-48ff-b59a-4d95c07b9792" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a6fea02f-4b25-4529-8920-c127b88ee6d0" start_index="0" end="c1d44042-270b-450e-bad3-6a7ef55c7fd6" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="fc794f23-e259-4817-a79b-cccd19ca8ffa" start_index="0" end="fc2d3df9-d02b-4e4f-a8ee-e978f0d1dff4" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a70f532f-92b3-452f-8fec-97a8e5b35d73" start_index="0" end="fc794f23-e259-4817-a79b-cccd19ca8ffa" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a70f532f-92b3-452f-8fec-97a8e5b35d73" start_index="1" end="fc794f23-e259-4817-a79b-cccd19ca8ffa" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="350a0a31-93a0-4811-af8f-5d94870012ab" start_index="0" end="fbb92e91-d8bb-4213-8f67-b0c4e57bdbf8" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="350a0a31-93a0-4811-af8f-5d94870012ab" start_index="0" end="e5b0116a-b9c8-45a2-8759-12926a96590a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="712e792c-0ed0-4233-8c5b-5dd376d523e7" start_index="0" end="fd1a69bb-10a3-48e5-a034-d8670b91180d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6f39c7fc-1187-48e3-99aa-df4d2ec0bcf7" start_index="0" end="78b6124e-b769-445e-b782-84597b5fba11" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6f39c7fc-1187-48e3-99aa-df4d2ec0bcf7" start_index="0" end="763ff6a0-f17f-4ec2-abea-6c9b08a79b1a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6f39c7fc-1187-48e3-99aa-df4d2ec0bcf7" start_index="0" end="a59240f5-4d4a-4918-a2c0-53cda21b16a3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="595d2383-93b8-4090-8e0e-b089ddf0bb61" start_index="0" end="3379a402-7113-46fc-b36c-2402ea5b6152" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="595d2383-93b8-4090-8e0e-b089ddf0bb61" start_index="0" end="6f39c7fc-1187-48e3-99aa-df4d2ec0bcf7" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="595d2383-93b8-4090-8e0e-b089ddf0bb61" start_index="0" end="28faa668-3bc3-4d75-bdac-f38bea8c8a8a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="595d2383-93b8-4090-8e0e-b089ddf0bb61" start_index="0" end="8e2f2833-afd1-40f2-bd54-ad63ee720914" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="595d2383-93b8-4090-8e0e-b089ddf0bb61" start_index="0" end="a26f844b-f1dd-4da9-8eb1-eb9239de5cc6" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a59240f5-4d4a-4918-a2c0-53cda21b16a3" start_index="0" end="d0d769d6-0d96-4e89-ba3d-32a47ac74a15" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8e2f2833-afd1-40f2-bd54-ad63ee720914" start_index="0" end="5fc2b936-5957-4b09-b4e6-ed9b37dddb52" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a26f844b-f1dd-4da9-8eb1-eb9239de5cc6" start_index="0" end="a70f532f-92b3-452f-8fec-97a8e5b35d73" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="47581ed1-bf80-4790-bb76-1fb2f08d7bf0" start_index="0" end="5fc2b936-5957-4b09-b4e6-ed9b37dddb52" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="d4615cab-131a-4361-a327-7d1ef934fbf4" annotationText="solid instance" left="521.485598242939" top="1790.75029544918" width="144" height="175" fontSize="30" InitialTop="1872.75029544918" InitialHeight="123" TextblockHeight="72" backgrouund="#FFC1D676">
      <Models ModelGuid="d0d769d6-0d96-4e89-ba3d-32a47ac74a15" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="a43dc19a-d346-41da-8e24-266f0fcc5c7d" annotationText="geometry instance" left="-30.1676564351061" top="1857.30777735187" width="144" height="175" fontSize="30" InitialTop="1939.30777735187" InitialHeight="123" TextblockHeight="72" backgrouund="#FFC1D676">
      <Models ModelGuid="6f39c7fc-1187-48e3-99aa-df4d2ec0bcf7" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="5a40954f-ae56-4bf4-b008-0f1ae652abc0" annotationText="working" left="-125.045791482695" top="1291.4035680981" width="144" height="139" fontSize="30" InitialTop="1337.4035680981" InitialHeight="123" TextblockHeight="36" backgrouund="#FFC1D676">
      <Models ModelGuid="a26f844b-f1dd-4da9-8eb1-eb9239de5cc6" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="14161.2236328125" eyeY="31798.2578125" eyeZ="7861.35595703125" lookX="-5060.07421875" lookY="-24906.2578125" lookZ="-27814.453125" upX="-0.0867735370993614" upY="0.874619722366333" upZ="-0.476980835199356" />
  </Cameras>
  <SessionTraceData>
    <NodeTraceData NodeId="fc2d3df9-d02b-4e4f-a8ee-e978f0d1dff4">
      <CallsiteTraceData CallSiteID="ByCurve_InClassDecl-1_InFunctionScope-1_Instance0_fc2d3df9-d02b-4e4f-a8ee-e978f0d1dff4"></CallsiteTraceData>
      <CallsiteTraceData CallSiteID="ByCurve_InClassDecl-1_InFunctionScope-1_Instance0_fc2d3df9-d02b-4e4f-a8ee-e978f0d1dff4"></CallsiteTraceData>
    </NodeTraceData>
  </SessionTraceData>
</Workspace>