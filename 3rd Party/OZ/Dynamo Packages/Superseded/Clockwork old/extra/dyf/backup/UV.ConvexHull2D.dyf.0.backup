<Workspace Version="0.7.2.2921" X="30" Y="402.814987217306" zoom="0.756342182890855" Description="Computes the convex hull of a given set of UV coordinates based on the monotone chain algorithm" Category="Clockwork.Geometry.UV.Actions" Name="UV.ConvexHull2D" ID="00b165c2-054f-4d53-9862-2987b8039a97">
  <Elements>
    <Dynamo.Nodes.Symbol type="Dynamo.Nodes.Symbol" guid="dfdada04-0316-432d-bfd5-d4555a03acd4" nickname="Input" x="0" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="UVs" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Output type="Dynamo.Nodes.Output" guid="87a8db17-8fc7-4a9c-86aa-308f432fbbec" nickname="Output" x="1629" y="17.5633333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="UVs" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.CodeBlockNodeModel type="Dynamo.Nodes.CodeBlockNodeModel" guid="49ca8a25-29cb-42d6-96d6-c1463dcbbda5" nickname="Code Block" x="1096" y="4.21833333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="chains = List.Transpose(chainpoints);&#xA;UV.ByCoordinates(chains[0],chains[1]);" ShouldFocus="false" />
    <DSIronPythonNode.PythonNode type="DSIronPythonNode.PythonNode" guid="e8716f22-4274-4547-b2a7-f0d33c141058" nickname="Python Script" x="872" y="7.105427357601E-15" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr

# based on a script found here:
# http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain#Python

points = IN[0]
#reformat points list
newpoints = list()
for pair in points:
	newpoint = (pair[0],pair[1])
	newpoints.append(newpoint)
points = sorted(set(newpoints))

def cross(o, a, b):
	return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0])
 
if len(points) &lt;= 1:
	OUT = points
else:
	lower = []
	for p in points:
		while len(lower) &gt;= 2 and cross(lower[-2], lower[-1], p) &lt;= 0:
			lower.pop()
		lower.append(p)
	upper = []
	for p in reversed(points):
		while len(upper) &gt;= 2 and cross(upper[-2], upper[-1], p) &lt;= 0:
			upper.pop()
		upper.append(p)
	OUT = lower[:-1] + upper[:-1]</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.Function type="Dynamo.Nodes.Function" guid="b0d0ce7a-db80-42b3-b4e5-cc10b583ad47" nickname="Turn Into List" x="166" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <ID value="cd09ad33-8c34-4850-ac26-24448d92c38f" />
      <Name value="Turn Into List" />
      <Description value="Turns an element (or a nested list) into a flat list" />
      <Inputs>
        <Input value="item" />
      </Inputs>
      <Outputs>
        <Output value="" />
      </Outputs>
    </Dynamo.Nodes.Function>
    <Dynamo.Nodes.CodeBlockNodeModel type="Dynamo.Nodes.CodeBlockNodeModel" guid="b288a36b-3a35-420f-8a70-cc0233f836d3" nickname="Code Block" x="371" y="4.21833333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="List.Transpose({uvlist1.U,uvlist1.V});" ShouldFocus="false" />
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="dfdada04-0316-432d-bfd5-d4555a03acd4" start_index="0" end="b0d0ce7a-db80-42b3-b4e5-cc10b583ad47" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="49ca8a25-29cb-42d6-96d6-c1463dcbbda5" start_index="1" end="87a8db17-8fc7-4a9c-86aa-308f432fbbec" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="e8716f22-4274-4547-b2a7-f0d33c141058" start_index="0" end="49ca8a25-29cb-42d6-96d6-c1463dcbbda5" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="b0d0ce7a-db80-42b3-b4e5-cc10b583ad47" start_index="0" end="b288a36b-3a35-420f-8a70-cc0233f836d3" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="b288a36b-3a35-420f-8a70-cc0233f836d3" start_index="0" end="e8716f22-4274-4547-b2a7-f0d33c141058" end_index="0" portType="0" />
  </Connectors>
  <Notes />
</Workspace>