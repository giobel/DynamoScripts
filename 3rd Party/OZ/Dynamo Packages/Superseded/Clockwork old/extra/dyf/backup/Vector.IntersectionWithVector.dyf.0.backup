<Workspace Version="0.7.2.3911" X="312.975609756098" Y="30" zoom="0.774944567627494" Description="Determines if two vectors intersect and returns the closest points of intersection on both vectors." Category="Clockwork.Geometry.Vector.Actions" Name="Vector.IntersectionWithVector" ID="fda2ac23-82d4-43fe-9138-75255506e53e">
  <Elements>
    <Dynamo.Nodes.Function type="Dynamo.Nodes.Function" guid="bab48640-8a5c-4a3f-b61e-a84cc353922d" nickname="Almost Zero" x="0" y="332" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <ID value="7203b34a-da51-4672-8993-3591ebf9537d" />
      <Name value="Almost Zero" />
      <Description value="Returns a feasable computational tolerance to zero (1.0e-9 or a billionth of 1) for use in calculations. More background info: https://github.com/ikeough/Dynamo/issues/879" />
      <Inputs />
      <Outputs>
        <Output value="1.0e-9" />
      </Outputs>
    </Dynamo.Nodes.Function>
    <Dynamo.Nodes.Symbol type="Dynamo.Nodes.Symbol" guid="94ad149d-bb17-4f08-8578-05fc4285f7ff" nickname="Input" x="0" y="249" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Basepoint #1" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol type="Dynamo.Nodes.Symbol" guid="3dd8a1c2-6b0c-451b-be76-de4bf25475ca" nickname="Input" x="0" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Vector #1" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol type="Dynamo.Nodes.Symbol" guid="e3aad591-61a7-4285-86e3-44a945a61865" nickname="Input" x="0" y="166" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Basepoint #2" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol type="Dynamo.Nodes.Symbol" guid="ed825ef2-87b2-4818-ad67-83baad6bec21" nickname="Input" x="0" y="83" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Vector #2" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Output type="Dynamo.Nodes.Output" guid="9f7a0352-f050-4d65-865a-e5d9407d2193" nickname="Output" x="858" y="722" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Vectors intersect" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output type="Dynamo.Nodes.Output" guid="8d4af877-2320-43da-a37c-efce378c646f" nickname="Output" x="858" y="555" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Closest point on Vector #1" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output type="Dynamo.Nodes.Output" guid="34729ef6-ba98-4bc4-97ec-57c1fa6044eb" nickname="Output" x="858" y="638" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Closest point on Vector #2" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output type="Dynamo.Nodes.Output" guid="b7801ab2-bcd2-478d-bb2f-8314da2fc21d" nickname="Output" x="858" y="805" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Average XYZ" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.CodeBlockNodeModel type="Dynamo.Nodes.CodeBlockNodeModel" guid="d3f54e2a-9782-4119-b2fd-fa03ee517683" nickname="Code Block" x="214" y="114" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="// Based on: http://stackoverflow.com/questions/10551555/need-an-algorithm-for-3d-vectors-intersection;&#xA;vec1 = v1.Normalized();&#xA;vec2 = v2.Normalized();&#xA;// Find the direction projection&#xA;u = vec1.Dot(vec2);&#xA;// If vectors are parallel, no intersection exists&#xA;para = vec1.IsParallel(vec2);&#xA;// Find the separation projections&#xA;pointvec = p2.Subtract(p1.AsVector()).AsVector();&#xA;t1 = pointvec.Dot(vec1);&#xA;t2 = pointvec.Dot(vec2);&#xA;// Find distance along line1&#xA;d1 = (t1-u*t2)/(1-u*u);&#xA;// Find distance along line2&#xA;d2 = (t2-u*t1)/(u*u-1);&#xA;// Find the point on line1&#xA;p1_new = p1.Add(vec1.Scale(d1));&#xA;para ? List.Empty : p1_new;&#xA;// Find the point on line2&#xA;p2_new = p2.Add(vec2.Scale(d2));&#xA;para ? List.Empty : p2_new;&#xA;// Do vectors intersect?&#xA;para ? false : p1_new.DistanceTo(p2_new) &lt; az;&#xA;// Average XYZ&#xA;pts = {p1_new,p2_new};&#xA;avpts = Point.ByCoordinates(Math.Average(pts.X), Math.Average(pts.Y), Math.Average(pts.Z));&#xA;para ? List.Empty : avpts;" ShouldFocus="false" />
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="bab48640-8a5c-4a3f-b61e-a84cc353922d" start_index="0" end="d3f54e2a-9782-4119-b2fd-fa03ee517683" end_index="4" portType="0" />
    <Dynamo.Models.ConnectorModel start="94ad149d-bb17-4f08-8578-05fc4285f7ff" start_index="0" end="d3f54e2a-9782-4119-b2fd-fa03ee517683" end_index="3" portType="0" />
    <Dynamo.Models.ConnectorModel start="3dd8a1c2-6b0c-451b-be76-de4bf25475ca" start_index="0" end="d3f54e2a-9782-4119-b2fd-fa03ee517683" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="e3aad591-61a7-4285-86e3-44a945a61865" start_index="0" end="d3f54e2a-9782-4119-b2fd-fa03ee517683" end_index="2" portType="0" />
    <Dynamo.Models.ConnectorModel start="ed825ef2-87b2-4818-ad67-83baad6bec21" start_index="0" end="d3f54e2a-9782-4119-b2fd-fa03ee517683" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="d3f54e2a-9782-4119-b2fd-fa03ee517683" start_index="10" end="8d4af877-2320-43da-a37c-efce378c646f" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="d3f54e2a-9782-4119-b2fd-fa03ee517683" start_index="12" end="34729ef6-ba98-4bc4-97ec-57c1fa6044eb" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="d3f54e2a-9782-4119-b2fd-fa03ee517683" start_index="13" end="9f7a0352-f050-4d65-865a-e5d9407d2193" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="d3f54e2a-9782-4119-b2fd-fa03ee517683" start_index="16" end="b7801ab2-bcd2-478d-bb2f-8314da2fc21d" end_index="0" portType="0" />
  </Connectors>
  <Notes />
</Workspace>