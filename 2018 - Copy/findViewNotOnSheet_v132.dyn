<Workspace Version="1.3.2.2480" X="86.9975999197607" Y="166.082810670364" zoom="0.515231343096635" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="37eb1403-ee8a-4d6c-9c88-5dfb79f57572" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.GetItemAtIndex" x="883" y="410" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.List.GetItemAtIndex@var[]..[],int">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="bc863fd9-e411-4393-940a-41a12da2f86c" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="676" y="504" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="2;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="62c6c49b-2349-43ce-84a2-b43ba47882d4" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.RestOfItems" x="1207" y="413" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.List.RestOfItems@var[]..[]">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="955fb676-83a8-4dca-bc28-52641067102e" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.Transpose" x="1487" y="413" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="DSCoreNodes.dll" function="DSCore.List.Transpose@var[]..[]">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="fd57ae06-249c-47d6-b2b6-177c970689e0" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.Deconstruct" x="1760" y="420" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.List.Deconstruct@var[]..[]">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="00bcefeb-d620-4b0a-94d9-3d5942d2f682" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2015.84455661391" y="450.895591135062" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" CodeText="scheduleToBeDeleted[0];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="5e99ce9f-7953-4527-95e5-f9c677b95ef6" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="Springs.Doc.DeleteElements" x="2565" y="235" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <ID value="a8709c69-aa1d-4e0d-b2f1-182332d5b6b9" />
      <Name value="Springs.Doc.DeleteElements" />
      <Description value="Attempts to delete the input list of elements from the active Revit document.The node returns the number of successfully deleted elements and their Ids as a string. Carefully observe the deleted elements count. It may be greater than the input list because hosted elements or tags will be deleted as well. If an element in the list can not be deleted (for example last revision or last view), the whole list will fail to be deleted." />
      <Inputs>
        <Input value="element" />
        <Input value="confirm" />
      </Inputs>
      <Outputs>
        <Output value="count" />
        <Output value="deletedIds(str)" />
        <Output value="failedIds(str)" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <PythonNodeModels.PythonNode guid="509f06c6-e15e-48b2-a485-e14122394a50" type="PythonNodeModels.PythonNode" nickname="Python Script" x="2654.30394090041" y="449.721576360165" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>#Copyright(c) 2016, Dimitar Venkov
# @5devene, dimitar.ven@gmail.com

import clr

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc = DocumentManager.Instance.CurrentDBDocument

def tolist(obj1):
	if hasattr(obj1,"__iter__"): return obj1
	else: return [obj1]

elems = UnwrapElement(tolist(IN[0]) )

if IN[1]:
	deleted, failed = [], []
	TransactionManager.Instance.EnsureInTransaction(doc)
	for e in elems:
		id = None
		try:
			id = e.Id
			del_id = doc.Delete(id)
			deleted.extend([d.ToString() for d in del_id])
		except:
			if id is not None:
				failed.append(id.ToString() )
	TransactionManager.Instance.TransactionTaskDone()
	s = set(deleted)
	failed1 = [x for x in failed if x not in s]
	OUT = len(deleted), ';'.join(deleted), ';'.join(failed1)
else:
	OUT = "Set confirm to True", "", ""</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.BoolSelector guid="65b90059-7cc2-4fe5-91f7-8c45eb803553" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="2400.38283250477" y="523.148497514321" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <PythonNodeModels.PythonNode guid="6a37793f-c38c-481e-9a62-c715a692002e" type="PythonNodeModels.PythonNode" nickname="Python Script" x="343.978081265965" y="419.27340427445" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB.Structure import *

clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import *

clr.AddReference('System')
from System.Collections.Generic import List

clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.GeometryConversion)
clr.ImportExtensions(Revit.Elements)

clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument
uidoc=DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument


# COLLECTING DATA
dviews = []
mviews = []
lviews = []
scheduleviews = []
all_sheeted_view_ids = []

# Collecting all the model, drafting, and legend views
views = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Views).WhereElementIsNotElementType().ToElements()

for v in views:
    if not v.IsTemplate:
        if v.ViewType == ViewType.DraftingView:
            dviews.append(v)
        elif v.ViewType == ViewType.Legend:
            lviews.append(v)
        else:
            mviews.append(v)

# Schedules need to be collected separately
schedule_views = FilteredElementCollector(doc).OfClass(ViewSchedule).WhereElementIsNotElementType().ToElements()

for sv in schedule_views:
    scheduleviews.append(sv)

# Now collecting all sheets and find all sheeted views
sheets = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Sheets).WhereElementIsNotElementType().ToElements()

for sht in sheets:
    vp_ids = [doc.GetElement(x).ViewId for x in sht.GetAllViewports()]
    all_sheeted_view_ids.extend(vp_ids)


# Find all sheeted schedule views and add them to the list as well
allSheetedSchedules = FilteredElementCollector(doc).OfClass(ScheduleSheetInstance).ToElements()

for ss in allSheetedSchedules:
    all_sheeted_view_ids.append(ss.ScheduleId)

# NOW LET'S REPORT
list0 = ['DRAFTING VIEWS NOT ON ANY SHEETS']
for v in dviews:
    if v.Id in all_sheeted_view_ids:
        continue
    else:
        list0.append([v.ViewName,doc.GetElement(v.Id)])


list1 = ['MODEL VIEWS NOT ON ANY SHEETS']
for v in mviews:
    if v.Id in all_sheeted_view_ids:
        continue
    else:
        list1.append([v.ViewName,doc.GetElement(v.Id)])


list2 = ['LEGENDS NOT ON ANY SHEETS']
for v in lviews:
    if v.Id in all_sheeted_view_ids:
        continue
    else:
        list2.append([v.ViewName,doc.GetElement(v.Id)])


list3 = ['SCHEDULES NOT ON ANY SHEETS']
for v in scheduleviews:
    if v.Id in all_sheeted_view_ids:
        continue
    else:
        list3.append([v.ViewName,doc.GetElement(v.Id)])

OUT = list1, list2, list3



</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.BoolSelector guid="2cfdab36-8ed3-4a55-895b-d6827f0321e7" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="60.4462922018579" y="419.27340427445" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="37eb1403-ee8a-4d6c-9c88-5dfb79f57572" start_index="0" end="62c6c49b-2349-43ce-84a2-b43ba47882d4" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bc863fd9-e411-4393-940a-41a12da2f86c" start_index="0" end="37eb1403-ee8a-4d6c-9c88-5dfb79f57572" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="62c6c49b-2349-43ce-84a2-b43ba47882d4" start_index="0" end="955fb676-83a8-4dca-bc28-52641067102e" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="955fb676-83a8-4dca-bc28-52641067102e" start_index="0" end="fd57ae06-249c-47d6-b2b6-177c970689e0" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="fd57ae06-249c-47d6-b2b6-177c970689e0" start_index="1" end="00bcefeb-d620-4b0a-94d9-3d5942d2f682" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="00bcefeb-d620-4b0a-94d9-3d5942d2f682" start_index="0" end="509f06c6-e15e-48b2-a485-e14122394a50" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="65b90059-7cc2-4fe5-91f7-8c45eb803553" start_index="0" end="509f06c6-e15e-48b2-a485-e14122394a50" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6a37793f-c38c-481e-9a62-c715a692002e" start_index="0" end="37eb1403-ee8a-4d6c-9c88-5dfb79f57572" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2cfdab36-8ed3-4a55-895b-d6827f0321e7" start_index="0" end="6a37793f-c38c-481e-9a62-c715a692002e" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="f4f1ea9b-4d0c-4e6e-962a-a7e28d0fcf2c" annotationText="Refresh" left="50.4462922018579" top="373.27340427445" width="155" height="114" fontSize="30" InitialTop="419.27340427445" InitialHeight="98" TextblockHeight="36" backgrouund="#FFC1D676">
      <Models ModelGuid="2cfdab36-8ed3-4a55-895b-d6827f0321e7" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>