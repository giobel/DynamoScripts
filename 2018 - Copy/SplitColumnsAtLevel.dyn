<Workspace Version="1.3.1.1736" X="-8252.16342175318" Y="-712.514992607045" zoom="1.04230162767269" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="6e67b559-913a-46df-ba77-d2dedd97de90" type="PythonNodeModels.PythonNode" nickname="Python Script" x="8854.17015073936" y="874.571720222808" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>import clr
 
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc =  DocumentManager.Instance.CurrentDBDocument

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

clr.AddReference("RevitAPI")
from Autodesk.Revit.DB import *

# Import System Collections...
import System
from System.Collections.Generic import *

def tolist(obj1):
    if hasattr(obj1,"__iter__"): return obj1
    else: return [obj1]
 
def FindLevelIndex(levels, lev):
    ind = None
    i = 0
    for l in levels:
        if l.Id.ToString() == lev.Id.ToString():
            ind = i
        i = i+1
    return ind
 
def CopyColByLevel(col, b, t):
    colOut = None
    try:
        c = ElementTransformUtils.CopyElement(doc,col.Id,XYZ(0,0,0))
        c = doc.GetElement(c[0])
        p = c.get_Parameter(BuiltInParameter.FAMILY_BASE_LEVEL_PARAM)
        p.Set.Overloads.Functions[2](b.Id)
        p = c.get_Parameter(BuiltInParameter.FAMILY_TOP_LEVEL_PARAM)
        p.Set.Overloads.Functions[2](t.Id)
        colOut = c.ToDSType(True)
    except Exception, e:
        colOut = e.message
    return colOut
 
run = tolist(IN[0])[0]
cols = tolist(UnwrapElement(IN[1]))

outList = []
if run:
    levels = list([l for l in FilteredElementCollector(doc).OfClass(Level).ToElements()])
    levels.sort(key=lambda x: x.Elevation, reverse=False)
    
    TransactionManager.Instance.EnsureInTransaction(doc)
    for c in cols:
        arr = []
        if c.Category.Name == "Structural Columns":
            p = c.get_Parameter(BuiltInParameter.FAMILY_BASE_LEVEL_PARAM)
            base = doc.GetElement(p.AsElementId())
            p = c.get_Parameter(BuiltInParameter.FAMILY_TOP_LEVEL_PARAM)
            top = doc.GetElement(p.AsElementId())
            
            if not base.Id.IntegerValue == top.Id.IntegerValue:
                i = FindLevelIndex(levels,base)
                j = FindLevelIndex(levels,top)
                
                while i &lt; j:
                    cCopy = CopyColByLevel(c,levels[i], levels[i+1])
                    arr.append(cCopy)    
                    i = i+1
                outList.append(arr)
                doc.Delete(c.Id)
    
    TransactionManager.Instance.TransactionTaskDone()
    OUT = outList
else:
    OUT = "Please Set Run to True"</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.BoolSelector guid="21b7ca9f-ac58-4173-9a50-4cce507fc12d" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="8673.73424416451" y="847.799916351669" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <Dynamo.Nodes.DSModelElementsSelection guid="55c188b5-56da-4706-b386-55236dd3fe48" type="Dynamo.Nodes.DSModelElementsSelection" nickname="Select Model Elements" x="8564.45899506627" y="968.336355242471" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="21b7ca9f-ac58-4173-9a50-4cce507fc12d" start_index="0" end="6e67b559-913a-46df-ba77-d2dedd97de90" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="55c188b5-56da-4706-b386-55236dd3fe48" start_index="0" end="6e67b559-913a-46df-ba77-d2dedd97de90" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>