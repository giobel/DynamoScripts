<Workspace Version="1.2.0.2514" X="-74.4972341937099" Y="-624.339831427808" zoom="0.816581273450177" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap>
    <ClassMap partialName="Curves.DeconstructPolyCurve" resolvedName="Geometry.Curves" assemblyName="LunchBox.dll" />
    <ClassMap partialName="Curves" resolvedName="Geometry.Curves" assemblyName="LunchBox.dll" />
    <ClassMap partialName="NurbsCurve" resolvedName="Autodesk.DesignScript.Geometry.NurbsCurve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.Curve" resolvedName="Autodesk.DesignScript.Geometry.Curve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.DesignScript.Geometry.Curve" resolvedName="Autodesk.DesignScript.Geometry.Curve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="NurbsCurve.ClosestPointTo" resolvedName="Autodesk.DesignScript.Geometry.NurbsCurve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="PolyCurve" resolvedName="Autodesk.DesignScript.Geometry.PolyCurve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Circle" resolvedName="Autodesk.DesignScript.Geometry.Circle" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Plane" resolvedName="Autodesk.DesignScript.Geometry.Plane" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Vector.YAxis" resolvedName="Autodesk.DesignScript.Geometry.Vector" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Vector" resolvedName="Autodesk.DesignScript.Geometry.Vector" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Geometry.domain" resolvedName="Autodesk.DesignScript.Geometry.Geometry" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="NurbsCurve.domain" resolvedName="Autodesk.DesignScript.Geometry.NurbsCurve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.Curve.domain" resolvedName="Autodesk.DesignScript.Geometry.Curve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.DesignScript.Geometry.Curve.domain" resolvedName="Autodesk.DesignScript.Geometry.Curve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="NurbsCurve.r" resolvedName="Autodesk.DesignScript.Geometry.NurbsCurve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.NurbsSurface.ByPoints" resolvedName="Autodesk.DesignScript.Geometry.NurbsSurface" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.NurbsSurface" resolvedName="Autodesk.DesignScript.Geometry.NurbsSurface" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.DesignScript.Geometry.NurbsSurface.ByPoints" resolvedName="Autodesk.DesignScript.Geometry.NurbsSurface" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.DesignScript.Geometry.NurbsSurface" resolvedName="Autodesk.DesignScript.Geometry.NurbsSurface" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.NurbsSurface.PointAtParameter" resolvedName="Autodesk.DesignScript.Geometry.NurbsSurface" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.DesignScript.Geometry.NurbsSurface.PointAtParameter" resolvedName="Autodesk.DesignScript.Geometry.NurbsSurface" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="Surface" resolvedName="Autodesk.DesignScript.Geometry.Surface" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Vector.XAxis" resolvedName="Autodesk.DesignScript.Geometry.Vector" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.Point.by" resolvedName="Autodesk.DesignScript.Geometry.Point" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.Point" resolvedName="Autodesk.DesignScript.Geometry.Point" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Autodesk.DesignScript.Geometry.Point.by" resolvedName="Autodesk.DesignScript.Geometry.Point" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Geometry" resolvedName="Autodesk.DesignScript.Geometry.Geometry" assemblyName="ProtoGeometry.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <CoreNodeModels.Input.Filename guid="c02fa007-8b67-4692-aa4c-3c060d1c36f5" type="CoreNodeModels.Input.Filename" nickname="File Path" x="-801.739009059964" y="445.103955334587" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.String>.\08%20Nurbs%20Surface.3dm</System.String>
      <HintPath>C:\Users\giovanni.brogioli\Documents\Dynamo\Scripts\PythonShell\08 Nurbs Surface.3dm</HintPath>
    </CoreNodeModels.Input.Filename>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="618827f6-7fea-40c0-ae0c-856031c69923" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="OpenRhino3dmModel.Get_RhinoFile" x="-538.739009059964" y="445.103955334587" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="..\..\..\..\AppData\Roaming\Dynamo\Dynamo%20Core\1.2\packages\Rhynamo\bin\Rhynamo.dll" function="Interoperability.ReadRhino.OpenRhino3dmModel.Get_RhinoFile@var">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="414f5f41-9fab-44ea-9858-928d1b3f26e5" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="RhinoObject.Get_RhinoObjects" x="-193.739009059964" y="445.103955334587" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="..\..\..\..\AppData\Roaming\Dynamo\Dynamo%20Core\1.2\packages\Rhynamo\bin\Rhynamo.dll" function="Interoperability.ReadRhino.RhinoObject.Get_RhinoObjects@var">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="950eb296-9f2d-4847-8f0b-219db1c3eee8" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="RhinoTranslationToDS.Rhino_NurbsSurfaceToDS" x="45.4935510306692" y="657.95453928372" isVisible="false" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="..\..\..\..\AppData\Roaming\Dynamo\Dynamo%20Core\1.2\packages\Rhynamo\bin\Rhynamo.dll" function="Interoperability.ReadRhino.RhinoTranslationToDS.Rhino_NurbsSurfaceToDS@var[]">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="60143101-c02a-4d27-9cab-8a833d136b56" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="436.100818611881" y="897.466421297923" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="10;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="39d38660-de2b-4be1-b93b-4869b6163995" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="443.0560421385" y="1036.63235619014" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="10;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="9a4002bf-2222-4b69-9799-6ff14dafce62" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="527" y="1238" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="3;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="28bdb806-65b7-43ac-9f8d-127d91c7aee0" type="PythonNodeModels.PythonNode" nickname="Python Script" x="694.495004330638" y="1161.85315804945" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="4">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
import math
#The inputs to this node will be stored as a list in the IN variables.

srf = IN[0]

udivisions = IN[1]

vdivisions = IN[2]

depth = IN[3]

topframepts = []
bottomframepts = []
allnodes = []

for i in range(0, int(udivisions)+1):
	udiv = float(i*(1.0)/int(udivisions))
	topline = []
	bottomline = []
	for j in range(0, int(vdivisions)+1):
		vdiv = float(j*(1.0)/int(vdivisions))
		pt = NurbsSurface.PointAtParameter(srf[0],udiv,vdiv)
		vct = Surface.NormalAtPoint(srf[0],pt)
		vct = Vector.Scale(vct,-depth)
		bottomPt = Geometry.Translate(pt,vct)
		topline.append(pt)
		bottomline.append(bottomPt)
	topframepts.append(topline)
	bottomframepts.append(bottomline)

beams = [] #I store here all the beams
bottomcenterpts = []

topChord = []


for i in range(0,len(topframepts)-1):

	for j in range(0,len(topframepts[i])-1):
		#top chord
		topChord.append(Line.ByStartPointEndPoint(topframepts[i][j],topframepts[i+1][j]))
		topChord.append(Line.ByStartPointEndPoint(topframepts[i][j+1],topframepts[i][j]))
		#top chord edges
		if i==len(topframepts)-2:
			topChord.append(Line.ByStartPointEndPoint(topframepts[i+1][j],topframepts[i+1][j+1]))
		if j==len(topframepts)-2:
			topChord.append(Line.ByStartPointEndPoint(topframepts[i][j+1],topframepts[i+1][j+1]))


diagonals = []

for i in range(0,len(bottomframepts)-1):
	bottomcenterrows = []
	for j in range(0,len(bottomframepts[i])-1):
		#to get center of each cell at bottom level
		tempsrf = Surface.ByPerimeterPoints([bottomframepts[i][j],bottomframepts[i+1][j],bottomframepts[i+1][j+1],bottomframepts[i][j+1]])
		center = Surface.PointAtParameter(tempsrf,0.5,0.5)
		centerpt = center
		allnodes.append(centerpt)
		bottomcenterrows.append(centerpt) 
		#diagonals
		diagonals.append(Line.ByStartPointEndPoint(topframepts[i][j],centerpt))
		diagonals.append(Line.ByStartPointEndPoint(topframepts[i+1][j],centerpt))
		diagonals.append(Line.ByStartPointEndPoint(topframepts[i+1][j+1],centerpt))
		diagonals.append(Line.ByStartPointEndPoint(topframepts[i][j+1],centerpt))
	bottomcenterpts.append(bottomcenterrows) #where I stored all the bottom chord points

bottomChord = []

#once I have stored all the bottom points I just run through them and connect them
for i in range(0,len(bottomcenterpts)-1):
    
    for j in range(0,len(bottomcenterpts[i])-1):
        
        bottomChord.append(Line.ByStartPointEndPoint(bottomcenterpts[i][j],bottomcenterpts[i+1][j]))
        bottomChord.append(Line.ByStartPointEndPoint(bottomcenterpts[i][j+1],bottomcenterpts[i][j]))
        
        if i == len(bottomcenterpts)-2:
            bottomChord.append(Line.ByStartPointEndPoint(bottomcenterpts[i+1][j],bottomcenterpts[i+1][j+1]))
        if j == len(bottomcenterpts[i])-2:
            bottomChord.append(Line.ByStartPointEndPoint(bottomcenterpts[i][j+1],bottomcenterpts[i+1][j+1]))




#Assign your output to the OUT variable.
OUT = topChord, bottomChord, diagonals

</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="9f5c1ee6-e314-412d-81b2-918776a07b8c" type="PythonNodeModels.PythonNode" nickname="Python Script" x="280.827434012992" y="1247.4768232539" isVisible="false" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="4">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
import math
#The inputs to this node will be stored as a list in the IN variables.

srf = IN[0]

udivisions = IN[1]

vdivisions = IN[2]

depth = IN[3]

topframepts = []
bottomframepts = []
allnodes = []

for i in range(0, int(udivisions)+1):
	udiv = float(i*(1.0)/int(udivisions))
	topline = []
	bottomline = []
	for j in range(0, int(vdivisions)+1):
		vdiv = float(j*(1.0)/int(vdivisions))
		pt = NurbsSurface.PointAtParameter(srf[0],udiv,vdiv)
		vct = Surface.NormalAtPoint(srf[0],pt)
		vct = Vector.Scale(vct,-depth)
		bottomPt = Geometry.Translate(pt,vct)
		topline.append(pt)
		bottomline.append(bottomPt)
	topframepts.append(topline)
	bottomframepts.append(bottomline)

beams = []
bottomcenterpts = []

for i in range(0,len(topframepts)-1):
	bottomcenterrows = []
	for j in range(0,len(topframepts[i])-1):
		#top chord
		beams.append(Line.ByStartPointEndPoint(topframepts[i][j],topframepts[i+1][j]))
		beams.append(Line.ByStartPointEndPoint(topframepts[i][j+1],topframepts[i][j]))
		#top chord edges
		if i==len(topframepts)-2:
			beams.append(Line.ByStartPointEndPoint(topframepts[i+1][j],topframepts[i+1][j+1]))
		if j==len(topframepts)-2:
			beams.append(Line.ByStartPointEndPoint(topframepts[i][j+1],topframepts[i+1][j+1]))
        
        #to get center of each cell at bottom level
        tempsrf = Surface.ByPerimeterPoints([bottomframepts[i][j],bottomframepts[i+1][j],bottomframepts[i+1][j+1],bottomframepts[i][j+1]])
        center = Surface.PointAtParameter(tempsrf,0.5,0.5)
        centerpt = center
        allnodes.append(centerpt)
        bottomcenterrows.append(centerpt) 
        #diagonals
        beams.append(Line.ByStartPointEndPoint(topframepts[i][j],centerpt))
        beams.append(Line.ByStartPointEndPoint(topframepts[i+1][j],centerpt))
        beams.append(Line.ByStartPointEndPoint(topframepts[i+1][j+1],centerpt))
        beams.append(Line.ByStartPointEndPoint(topframepts[i][j+1],centerpt))
	bottomcenterpts.append(bottomcenterrows) #where I stored all the bottom chord points

#once I have stored all the bottom points I just run through them and connect them
bottomChord = []

for i in range(0,len(bottomcenterpts)-1):
    
    for j in range(0,len(bottomcenterpts[i])-1):
        
        bottomChord.append(Line.ByStartPointEndPoint(bottomcenterpts[i][j],bottomcenterpts[i+1][j]))
        bottomChord.append(Line.ByStartPointEndPoint(bottomcenterpts[i][j+1],bottomcenterpts[i][j]))
        
        if i == len(bottomcenterpts)-2:
            bottomChord.append(Line.ByStartPointEndPoint(bottomcenterpts[i+1][j],bottomcenterpts[i+1][j+1]))
        if j == len(bottomcenterpts[i])-2:
            bottomChord.append(Line.ByStartPointEndPoint(bottomcenterpts[i][j+1],bottomcenterpts[i+1][j+1]))



#Assign your output to the OUT variable.
OUT = len(bottomcenterpts),topframepts, bottomframepts, beams, bottomcenterpts, bottomcenterrows, bottomChord

</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="9660e33b-60ab-44b4-8559-5c41b24e28ad" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="939.15605607543" y="1358.49970049323" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="a[2];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="c02fa007-8b67-4692-aa4c-3c060d1c36f5" start_index="0" end="618827f6-7fea-40c0-ae0c-856031c69923" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="618827f6-7fea-40c0-ae0c-856031c69923" start_index="0" end="414f5f41-9fab-44ea-9858-928d1b3f26e5" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="414f5f41-9fab-44ea-9858-928d1b3f26e5" start_index="0" end="950eb296-9f2d-4847-8f0b-219db1c3eee8" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="950eb296-9f2d-4847-8f0b-219db1c3eee8" start_index="0" end="28bdb806-65b7-43ac-9f8d-127d91c7aee0" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="950eb296-9f2d-4847-8f0b-219db1c3eee8" start_index="0" end="9f5c1ee6-e314-412d-81b2-918776a07b8c" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="60143101-c02a-4d27-9cab-8a833d136b56" start_index="0" end="28bdb806-65b7-43ac-9f8d-127d91c7aee0" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="60143101-c02a-4d27-9cab-8a833d136b56" start_index="0" end="9f5c1ee6-e314-412d-81b2-918776a07b8c" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="39d38660-de2b-4be1-b93b-4869b6163995" start_index="0" end="28bdb806-65b7-43ac-9f8d-127d91c7aee0" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="39d38660-de2b-4be1-b93b-4869b6163995" start_index="0" end="9f5c1ee6-e314-412d-81b2-918776a07b8c" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9a4002bf-2222-4b69-9799-6ff14dafce62" start_index="0" end="28bdb806-65b7-43ac-9f8d-127d91c7aee0" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9a4002bf-2222-4b69-9799-6ff14dafce62" start_index="0" end="9f5c1ee6-e314-412d-81b2-918776a07b8c" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="28bdb806-65b7-43ac-9f8d-127d91c7aee0" start_index="0" end="9660e33b-60ab-44b4-8559-5c41b24e28ad" end_index="0" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="851419a4-dcbd-4b66-b0fc-8762908fd3d7" text="v-division" x="444.421865043063" y="991.904782544614" />
    <Dynamo.Graph.Notes.NoteModel guid="919a6c0d-0254-4657-8dd1-db0198899491" text="u-division" x="444.55084317777" y="705.739339644626" />
    <Dynamo.Graph.Notes.NoteModel guid="95cece05-44d1-4575-8fb0-6ced32396044" text="depth" x="591.583057246606" y="1209.57424166732" />
  </Notes>
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-37.1016955091256" eyeY="37.821813534681" eyeZ="-75.3005785594558" lookX="37.0785669021306" lookY="-49.4961773365091" lookZ="57.5112348505299" upX="0.216067822744153" upY="0.917060077190594" upZ="0.335135049486446" />
  </Cameras>
</Workspace>