<Workspace Version="0.8.2.2392" X="-57.83699375" Y="-36.6260643088553" zoom="1.33823125" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Nodes.DSModelElementSelection guid="3881aa77-201d-46d4-a57d-261969f2717c" type="Dynamo.Nodes.DSModelElementSelection" nickname="Select Model Element" x="139" y="175" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <instance id="1516ac76-12f1-4bac-be81-0432bf02ff36-00a60b3c" />
    </Dynamo.Nodes.DSModelElementSelection>
    <Dynamo.Nodes.DSModelElementSelection guid="e563f5cb-4376-4fbe-9def-96e6b7ee6060" type="Dynamo.Nodes.DSModelElementSelection" nickname="Select Model Element" x="157" y="384" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <instance id="1516ac76-12f1-4bac-be81-0432bf02ff36-00a60b3c" />
    </Dynamo.Nodes.DSModelElementSelection>
    <Dynamo.Nodes.DSFunction guid="b64164e7-3335-43cf-b477-b28d99ace2d8" type="Dynamo.Nodes.DSFunction" nickname="StructuralFraming.Location" x="460" y="385" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" assembly="RevitNodes.dll" function="Revit.Elements.StructuralFraming.Location" />
    <DSIronPythonNode.PythonNode guid="fcd063a7-8293-48d9-aa3a-ffa349beb78e" type="DSIronPythonNode.PythonNode" nickname="Python Script" x="423.395895701883" y="175.896870820238" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" inputcount="1">
      <Script>import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.GeometryConversion)

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument
views = UnwrapElement(IN[0])

elementlist = list()
failedlist = list()
"""
TransactionManager.Instance.EnsureInTransaction(doc)
for item in views:
	try:
		newmax = item.CropBox.Max.Add(margin)
		newmin = item.CropBox.Min.Subtract(margin)
		newbox = BoundingBoxXYZ()
		newbox.Max = newmax
		newbox.Min = newmin
		item.CropBox = newbox
		elementlist.append(item)
	except:
		elementlist.append(list())
TransactionManager.Instance.TransactionTaskDone()
"""


OUT = ViewDirection(views.Id)</Script>
    </DSIronPythonNode.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="3881aa77-201d-46d4-a57d-261969f2717c" start_index="0" end="fcd063a7-8293-48d9-aa3a-ffa349beb78e" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="e563f5cb-4376-4fbe-9def-96e6b7ee6060" start_index="0" end="b64164e7-3335-43cf-b477-b28d99ace2d8" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="background_preview" eyeX="166.089263833425" eyeY="168.588763797138" eyeZ="166.089263833425" lookX="-166.089263833425" lookY="-166.089263833425" lookZ="-166.089263833425" />
  </Cameras>
</Workspace>