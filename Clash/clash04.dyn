<Workspace Version="1.3.2.2480" X="-1974.8351046131" Y="101.208387114022" zoom="0.949648495888348" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Nodes.DSModelElementsSelection guid="74909603-d31f-454e-a5c1-60f50c5e7c17" type="Dynamo.Nodes.DSModelElementsSelection" nickname="Select Model Elements" x="2115.25726191251" y="-98.0762863049871" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="true">
      <instance id="9e9a6a43-04ae-45dd-b6c5-16884893d438-0022e5ca" />
    </Dynamo.Nodes.DSModelElementsSelection>
    <Dynamo.Nodes.DSModelElementsSelection guid="b45993f0-0ea7-421f-bc55-7540531e4b3c" type="Dynamo.Nodes.DSModelElementsSelection" nickname="Select Model Elements" x="2063.93363395445" y="233.179033331528" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="true">
      <instance id="96120126-4b6e-46e6-9a74-7ce695fcf789-0041823b" />
      <instance id="96120126-4b6e-46e6-9a74-7ce695fcf789-0041823c" />
      <instance id="96120126-4b6e-46e6-9a74-7ce695fcf789-0041823d" />
    </Dynamo.Nodes.DSModelElementsSelection>
    <Dynamo.Nodes.DSModelElementsSelection guid="b5998032-2c50-4da2-8bf4-23d225873212" type="Dynamo.Nodes.DSModelElementsSelection" nickname="Select Model Elements" x="2111.84153100521" y="62.8146626503214" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="true">
      <instance id="22aa2378-d106-41fd-91cc-32cbfe734314-002172b7" />
    </Dynamo.Nodes.DSModelElementsSelection>
    <Dynamo.Nodes.DSModelElementsSelection guid="0441048c-b4f8-4b4c-b50f-48b608ee108d" type="Dynamo.Nodes.DSModelElementsSelection" nickname="Select Model Elements" x="2047.08013734183" y="483.759383516677" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="true">
      <instance id="96120126-4b6e-46e6-9a74-7ce695fcf789-00418231" />
      <instance id="96120126-4b6e-46e6-9a74-7ce695fcf789-00418232" />
    </Dynamo.Nodes.DSModelElementsSelection>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="bea7452d-1c0e-468f-b959-92dfd128d2db" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2491.00199851168" y="352.517765428879" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" CodeText="{a,b};" ShouldFocus="false">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="b88378c8-ffce-4819-9584-16f96ecceb27" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2473.02061039194" y="588.47934113449" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" CodeText="{a,b};" ShouldFocus="false">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="f85789a3-7418-40a9-9dd7-7c6318f7ccbb" type="PythonNodeModels.PythonNode" nickname="Python Script" x="2958.93128435582" y="550.772387360856" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>import clr
clr.AddReference("ProtoGeometry")
from Autodesk.DesignScript.Geometry import *

LineBestFit = Line.ByBestFitThroughPoints

# Import RevitAPI
clr.AddReference("RevitAPI")
from Autodesk.Revit.DB import *
clr.AddReference("RevitAPIUI")
from Autodesk.Revit.UI import TaskDialog
# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
# Import ToProtoType, ToRevitType geometry conversion extension methods
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.GeometryConversion)

import math

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application


beam = UnwrapElement(IN[0])
duct = UnwrapElement(IN[1])
dynamoBeams = IN[0]


def GetElemType(e):
	try:
		elemType = doc.GetElement(e.GetTypeId())
		return elemType
	except:
		pass
		return None

def GetParamValue(eType, pName):
	paramValue = None
	for i in eType.Parameters:
		if i.Definition.Name == pName:
			paramValue = i.AsValueString()
			break
		else:
			continue
	return paramValue


def GetParam(element, name):
	p = element.get_Parameter(name)	
	if p.StorageType == StorageType.String:
		return p.AsString()
	elif p.StorageType == StorageType.ElementId:
		elem = doc.GetElement(p.AsElementId())
		return elem
	elif p.StorageType == StorageType.Double:
		ProjectUnits = p.DisplayUnitType
		newval = UnitUtils.ConvertFromInternalUnits(p.AsDouble(),ProjectUnits)
		return newval
	else:
		return p.AsInteger()

def GetEndPoints(beam):
	return [beam.Location.Curve.GetEndPoint(0).ToPoint(), beam.Location.Curve.GetEndPoint(1).ToPoint()]


def PointXYDistance(Pt0, Pt1):
	distance = math.pow((math.pow((Pt0.X-Pt1.X),2) + math.pow((Pt0.Y-Pt1.Y),2)),0.5)
	return round(distance,0)

def beamRealCurve(element):
	vertex = element.Geometry()[0].Vertices
	pGeom = []
	for v in vertex:
		pGeom.append(v.PointGeometry)
	crv = LineBestFit(pGeom)	
	return crv
	

values = []


for i in range(0,len(beam)):
	val = []
	values.append(val)
	for j in range(0,len(duct[i])):
		# BEAM PARAMETERS
		
		zOffset = GetParam(beam[i], BuiltInParameter.Z_OFFSET_VALUE) # NEGATIVE VALUE!
		
		beamZTop = GetEndPoints(beam[i])[0].Z + zOffset
		
		#beamEndPoint = GetEndPoints(beam)[1] NOT ACCURATE!
		
		beamStPoint = beamRealCurve(dynamoBeams[i]).StartPoint
		beamEndPoint = beamRealCurve(dynamoBeams[i]).EndPoint
		
		#length = round(GetParam(beam, BuiltInParameter.INSTANCE_LENGTH_PARAM),0) NOT NEEDED ANYMORE!
		
		#cutLength = round(GetParam(beam, BuiltInParameter.STRUCTURAL_FRAME_CUT_LENGTH),0) NOT NEEDED ANYMORE!
		
		#remainLength = length - cutLength NOT NEEDED ANYMORE!
		
		beamDepth = int(GetParamValue(GetElemType(beam[i]), "d"))
		
		
		# DUCT PARAMETERS
		
		ductWidth = int(GetParamValue(duct[i][j], "y"))
		
		
		
		ductHeight = int(GetParamValue(duct[i][j], "z"))
		
		
		
		ductCentroid = duct[i][j].Location.Point.ToPoint()
		
		
		# CHECKS 
		
		# 1. BEAM START POINT TO OPENING EDGE DISTANCE
		
		beamStOpeningEdgeDist = PointXYDistance(ductCentroid, beamStPoint) - ductWidth/2
		
		val.append(beamStOpeningEdgeDist)
		
		beamEndOpeningEdgeDist = PointXYDistance(ductCentroid, beamEndPoint) - ductWidth/2
		
		val.append(beamEndOpeningEdgeDist)
		
		# 2. DISTANCE FROM FLANGES
		
		distTopFlange = round(beamZTop - ductCentroid.Z - ductHeight/2,0)
		
		val.append(distTopFlange)
		
		distBotFlange = round(beamDepth - ductHeight - distTopFlange,0)
		
		val.append(distBotFlange)
		
		val.append(ductWidth)
		
		val.append(ductHeight)
		
		# 3. CHECKS
		"""
		checkA = beamStOpeningEdgeDist &gt; (2 * beamDepth or ductWidth)
		
		checkB = beamEndOpeningEdgeDist &gt; (2 * beamDepth or ductWidth)
		
		checkC = distTopFlange &gt; (0.25 * beamDepth)
		
		checkD = distBotFlange &gt; (0.25 * beamDepth)
		
		checkE = ductWidth &lt; beamDepth
		
		checkF = ductHeight &lt; (0.5 * beamDepth)
"""

#names = ["beamStOpeningEdgeDist", "beamEndOpeningEdgeDist", "distTopFlange", "distBotFlange", "ductWidth", "ductHeight"]
#values = [beamStOpeningEdgeDist, beamEndOpeningEdgeDist, distTopFlange, distBotFlange, ductWidth, ductHeight]
#checks = [checkA, checkB, checkC, checkD, checkE, checkF]

#dict = [names, values, checks]

#OUT = map(list, zip(*dict))

OUT = values
</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="447ec7f8-8f19-4c8f-899c-a8363a1f4482" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.Chop" x="3284.20467347323" y="552.919751494576" isVisible="true" isUpstreamVisible="true" lacing="Longest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.List.Chop@var[]..[],int[]">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="0e14dc84-39a5-4405-9f3a-07155a5d33b0" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="3136.23600340432" y="624.509751885718" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="6;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="80e4c9c0-b654-4bd2-ae64-cba9c567050b" type="PythonNodeModels.PythonNode" nickname="Python Script" x="3202.3504806221" y="273.590442371506" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script># Copyright(c) 2015, Konrad K Sobon
# @arch_laboratory, http://archi-lab.net

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
doc = DocumentManager.Instance.CurrentDBDocument

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

import sys
pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

paramNames = IN[1]

if isinstance(IN[0], list):
	elements = []
	for i in IN[0]:
		elements.append(UnwrapElement(i))
else:
	elements = UnwrapElement(IN[0])

def ProcessList(_func, _list):
	return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )

def ProcessListArg(_func, _list, _arg):
    return map( lambda x: ProcessListArg(_func, x, _arg) if type(x)==list else _func(x, _arg), _list )

def GetElemType(e):
	doc = DocumentManager.Instance.CurrentDBDocument
	try:
		elemType = doc.GetElement(e.GetTypeId())
		return elemType
	except:
		pass
		return None

def GetParamValue(eType, pName):
	paramValue = None
	for i in eType.Parameters:
		if i.Definition.Name == pName:
			paramValue = i.AsString()
			break
		else:
			continue
	return paramValue

try:
	errorReport = None
	paramValues = []
	if isinstance(elements, list):
		elemTypes = ProcessList(GetElemType, elements)
		if isinstance(paramNames, list):
			for i in paramNames:
				paramValues.append(ProcessListArg(GetParamValue, elemTypes, i))
			paramValues = map(list, zip(*paramValues))
		else:
			paramValues = ProcessListArg(GetParamValue, elemTypes, paramNames)
	else:
		elemTypes = [GetElemType(elements)]
		if isinstance(paramNames, list):
			for i in paramNames:
				paramValues.append(ProcessListArg(GetParamValue, elemTypes, i))
			paramValues = map(list, zip(*paramValues))
		else:
			paramValues = ProcessListArg(GetParamValue, elemTypes, paramNames)
except:
	# if error accurs anywhere in the process catch it
	import traceback
	errorReport = traceback.format_exc()	

#Assign your output to the OUT variable
if errorReport == None:
	OUT = paramValues
else:
	OUT = errorReport</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="5cab6537-d6c9-452a-906c-fc7f251de9e7" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="Duct Clash Check" x="2789.55151569527" y="115.288736498387" isVisible="true" isUpstreamVisible="true" lacing="Longest" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" useLevels="True" level="1" shouldKeepListStructure="False" />
      <PortInfo index="1" default="False" useLevels="True" level="1" shouldKeepListStructure="False" />
      <ID value="0b22c6e1-1550-4023-8180-bec2378903cf" />
      <Name value="Duct Clash Check" />
      <Description value="Check Clash" />
      <Inputs>
        <Input value="Beams" />
        <Input value="Ducts" />
      </Inputs>
      <Outputs>
        <Output value="OUT" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="74909603-d31f-454e-a5c1-60f50c5e7c17" start_index="0" end="bea7452d-1c0e-468f-b959-92dfd128d2db" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b45993f0-0ea7-421f-bc55-7540531e4b3c" start_index="0" end="b88378c8-ffce-4819-9584-16f96ecceb27" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b5998032-2c50-4da2-8bf4-23d225873212" start_index="0" end="bea7452d-1c0e-468f-b959-92dfd128d2db" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0441048c-b4f8-4b4c-b50f-48b608ee108d" start_index="0" end="b88378c8-ffce-4819-9584-16f96ecceb27" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bea7452d-1c0e-468f-b959-92dfd128d2db" start_index="0" end="f85789a3-7418-40a9-9dd7-7c6318f7ccbb" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bea7452d-1c0e-468f-b959-92dfd128d2db" start_index="0" end="5cab6537-d6c9-452a-906c-fc7f251de9e7" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b88378c8-ffce-4819-9584-16f96ecceb27" start_index="0" end="f85789a3-7418-40a9-9dd7-7c6318f7ccbb" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b88378c8-ffce-4819-9584-16f96ecceb27" start_index="0" end="5cab6537-d6c9-452a-906c-fc7f251de9e7" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f85789a3-7418-40a9-9dd7-7c6318f7ccbb" start_index="0" end="447ec7f8-8f19-4c8f-899c-a8363a1f4482" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0e14dc84-39a5-4405-9f3a-07155a5d33b0" start_index="0" end="447ec7f8-8f19-4c8f-899c-a8363a1f4482" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>