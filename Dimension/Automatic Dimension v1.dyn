<Workspace Version="0.8.2.2392" X="253.940471554442" Y="-794.261740391276" zoom="0.670371008799368" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap>
    <ClassMap partialName="Element.Curve" resolvedName="Revit.Elements.Element" assemblyName="RevitNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <Dynamo.Nodes.Function guid="7582903c-9d36-4bb7-a62a-133ef1659ae7" type="Dynamo.Nodes.Function" nickname="Element.Location" x="-188.04706347415" y="1245.72357729486" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False">
      <ID value="0b59c4d8-afe4-4063-bf7e-2195fa33e8a9" />
      <Name value="Element.Location" />
      <Description value="Returns the location of an element as an XYZ (or if it's line-based the start and end point of the line), along with some booleans to help filtering the results. Use this for some element types (e.g. walls or lines) that do not work with the built-in Get Family Instance Location node. " />
      <Inputs>
        <Input value="element" />
      </Inputs>
      <Outputs>
        <Output value="points" />
        <Output value="curveEndpoints" />
        <Output value="curves" />
        <Output value="isPoint" />
        <Output value="isCurve" />
        <Output value="hasLocation" />
      </Outputs>
    </Dynamo.Nodes.Function>
    <Dynamo.Nodes.DSModelElementSelection guid="c02a4f25-32be-47be-982b-4e06810042bd" type="Dynamo.Nodes.DSModelElementSelection" nickname="Select Model Element" x="-472.920576601656" y="1252.74664937846" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <instance id="77fa412b-b173-4b7b-a8e0-85a05161f9d3-0021d09c" />
    </Dynamo.Nodes.DSModelElementSelection>
    <Dynamo.Nodes.DSModelElementSelection guid="895fa97f-2233-4d15-bcdd-1f43afcdbf36" type="Dynamo.Nodes.DSModelElementSelection" nickname="Select Model Element" x="-479.646162542417" y="1662.59175398441" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <instance id="77fa412b-b173-4b7b-a8e0-85a05161f9d3-0021d052" />
    </Dynamo.Nodes.DSModelElementSelection>
    <Dynamo.Nodes.Function guid="32514b32-ccfe-4219-a31e-f7a207e32858" type="Dynamo.Nodes.Function" nickname="Element.Location" x="-194.783138282411" y="1596.98145184295" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False">
      <ID value="0b59c4d8-afe4-4063-bf7e-2195fa33e8a9" />
      <Name value="Element.Location" />
      <Description value="Returns the location of an element as an XYZ (or if it's line-based the start and end point of the line), along with some booleans to help filtering the results. Use this for some element types (e.g. walls or lines) that do not work with the built-in Get Family Instance Location node. " />
      <Inputs>
        <Input value="element" />
      </Inputs>
      <Outputs>
        <Output value="points" />
        <Output value="curveEndpoints" />
        <Output value="curves" />
        <Output value="isPoint" />
        <Output value="isCurve" />
        <Output value="hasLocation" />
      </Outputs>
    </Dynamo.Nodes.Function>
    <Dynamo.Nodes.DSFunction guid="8e3ad75e-b76c-492e-b17a-567e4b7ef04d" type="Dynamo.Nodes.DSFunction" nickname="Curve.Offset" x="617.854784517997" y="1313.72918438415" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Curve.Offset@double">
      <PortInfo index="1" default="True" />
    </Dynamo.Nodes.DSFunction>
    <Dynamo.Nodes.DSFunction guid="2ee924e0-8184-482d-885d-0cd2904578b4" type="Dynamo.Nodes.DSFunction" nickname="Line.ByStartPointEndPoint" x="280.791764591236" y="1401.48971858902" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point" />
    <Dynamo.Nodes.CodeBlockNodeModel guid="2af9ae6c-b6ee-45ee-9cb0-869fa511e531" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Code Block" x="479.343284970172" y="1402.41778955535" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" CodeText="500;" ShouldFocus="false" />
    <DSIronPythonNode.PythonNode guid="49a914e6-366a-4924-b642-1e0d82748c73" type="DSIronPythonNode.PythonNode" nickname="Python Script" x="951.300951768006" y="1202.09814910561" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" inputcount="2">
      <Script>import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument

if isinstance(IN[0], list):
	lines = []
	for i in IN[0]:
		lines.append(UnwrapElement(i))
else:
	lines = [UnwrapElement(IN[0])]


crvs = []

for line in lines:
	crvs.append(line.GeometryCurve)


if isinstance(IN[1], list):
	linea = []
	for i in IN[1]:
		linea.append(UnwrapElement(i).ToRevitType())
else:
	linea = [UnwrapElement(IN[1]).ToRevitType()]
"""
refln = []

for ln in linea:
	refln.append(ln.ToRevitType())
"""	


#grids = UnwrapElement(IN[1])

"""gridRef = ReferenceArray()
opt = Options()
opt.ComputeReferences = True
opt.IncludeNonVisibleObjects = True
opt.View = doc.ActiveView
for grid in grids:
	for obj in grid.get_Geometry(opt):
		if isinstance(obj, Line):
			gline = obj
			gridRef.Append(gline.Reference)"""

TransactionManager.Instance.EnsureInTransaction(doc)
"""

for crv in crvs:
	ref = ReferenceArray()
	ref.Append(crv.GetEndPointReference(0))
	ref.Append(crv.GetEndPointReference(1))
	for i in range (0,len(linea)):
		dim = doc.Create.NewDimension(doc.ActiveView, linea[i], ref)
"""

for i in range (0,len(linea)):
	ref = ReferenceArray()
	ref.Append(crvs[i].GetEndPointReference(0))
	ref.Append(crvs[i].GetEndPointReference(1))
	dim = doc.Create.NewDimension(doc.ActiveView, linea[i], ref)



TransactionManager.Instance.TransactionTaskDone()

OUT = linea</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.DSFunction guid="481f9346-8e2f-4227-8ce8-839b3436edb2" type="Dynamo.Nodes.DSFunction" nickname="ModelCurve.ByCurve" x="611.294305981562" y="1155.69426121911" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" assembly="RevitNodes.dll" function="Revit.Elements.ModelCurve.ByCurve@Autodesk.DesignScript.Geometry.Curve" />
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="7582903c-9d36-4bb7-a62a-133ef1659ae7" start_index="0" end="2ee924e0-8184-482d-885d-0cd2904578b4" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="c02a4f25-32be-47be-982b-4e06810042bd" start_index="0" end="7582903c-9d36-4bb7-a62a-133ef1659ae7" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="895fa97f-2233-4d15-bcdd-1f43afcdbf36" start_index="0" end="32514b32-ccfe-4219-a31e-f7a207e32858" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="32514b32-ccfe-4219-a31e-f7a207e32858" start_index="0" end="2ee924e0-8184-482d-885d-0cd2904578b4" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="8e3ad75e-b76c-492e-b17a-567e4b7ef04d" start_index="0" end="49a914e6-366a-4924-b642-1e0d82748c73" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="2ee924e0-8184-482d-885d-0cd2904578b4" start_index="0" end="8e3ad75e-b76c-492e-b17a-567e4b7ef04d" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="2ee924e0-8184-482d-885d-0cd2904578b4" start_index="0" end="481f9346-8e2f-4227-8ce8-839b3436edb2" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="2af9ae6c-b6ee-45ee-9cb0-869fa511e531" start_index="0" end="8e3ad75e-b76c-492e-b17a-567e4b7ef04d" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="481f9346-8e2f-4227-8ce8-839b3436edb2" start_index="0" end="49a914e6-366a-4924-b642-1e0d82748c73" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="background_preview" eyeX="17.2440535921701" eyeY="65.339842117844" eyeZ="77.7828991758061" lookX="-17.2440535921701" lookY="-62.8403421541312" lookZ="-77.7828991758061" />
  </Cameras>
  <SessionTraceData>
    <NodeTraceData NodeId="481f9346-8e2f-4227-8ce8-839b3436edb2">
      <CallsiteTraceData>PFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOlNPQVAtRU5DPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIiB4bWxuczpjbHI9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc29hcC9lbmNvZGluZy9jbHIvMS4wIiBTT0FQLUVOVjplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyI+DQo8U09BUC1FTlY6Qm9keT4NCjxhMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXIgaWQ9InJlZi0xIiB4bWxuczphMT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbHIvbnNhc3NlbS9Qcm90b0NvcmUvUHJvdG9Db3JlJTJDJTIwVmVyc2lvbiUzRDAuOC4yLjIzOTIlMkMlMjBDdWx0dXJlJTNEbmV1dHJhbCUyQyUyMFB1YmxpY0tleVRva2VuJTNEbnVsbCI+DQo8TnVtYmVyT2ZFbGVtZW50cz4xPC9OdW1iZXJPZkVsZW1lbnRzPg0KPEJhc2UtMF9IYXNEYXRhPmZhbHNlPC9CYXNlLTBfSGFzRGF0YT4NCjxCYXNlLTBfSGFzTmVzdGVkRGF0YT50cnVlPC9CYXNlLTBfSGFzTmVzdGVkRGF0YT4NCjxCYXNlLTBfTmVzdGVkRGF0YUNvdW50PjE8L0Jhc2UtMF9OZXN0ZWREYXRhQ291bnQ+DQo8QmFzZS0wLTBfSGFzRGF0YT50cnVlPC9CYXNlLTAtMF9IYXNEYXRhPg0KPEJhc2UtMC0wX0RhdGEgaWQ9InJlZi0zIj5QRk5QUVZBdFJVNVdPa1Z1ZG1Wc2IzQmxJSGh0Ykc1ek9uaHphVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRXRhVzV6ZEdGdVkyVWlJSGh0Ykc1ek9uaHpaRDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRWlJSGh0Ykc1ek9sTlBRVkF0UlU1RFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJaUI0Yld4dWN6cGpiSEk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmMyOWhjQzlsYm1OdlpHbHVaeTlqYkhJdk1TNHdJaUJUVDBGUUxVVk9WanBsYm1OdlpHbHVaMU4wZVd4bFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJK0RRbzhVMDlCVUMxRlRsWTZRbTlrZVQ0TkNqeGhNVHBUWlhKcFlXeHBlbUZpYkdWSlpDQnBaRDBpY21WbUxURWlJSGh0Ykc1ek9tRXhQU0pvZEhSd09pOHZjMk5vWlcxaGN5NXRhV055YjNOdlpuUXVZMjl0TDJOc2NpOXVjMkZ6YzJWdEwxSmxkbWwwVTJWeWRtbGpaWE11VUdWeWMybHpkR1Z1WTJVdlVtVjJhWFJUWlhKMmFXTmxjeVV5UXlVeU1GWmxjbk5wYjI0bE0wUXdMamd1TWk0eU16a3lKVEpESlRJd1EzVnNkSFZ5WlNVelJHNWxkWFJ5WVd3bE1rTWxNakJRZFdKc2FXTkxaWGxVYjJ0bGJpVXpSRzUxYkd3aVBnMEtQSE4wY21sdVowbEVJR2xrUFNKeVpXWXRNeUkrWWpJNFpHSmpNak10T0RWaU1TMDBOR1V6TFdJd1pEY3RNbUU0TURaa1pESXlOakpoTFRBd01qUmxaRE15UEM5emRISnBibWRKUkQ0TkNqeHBiblJKUkQ0eU5ESXdNREU0UEM5cGJuUkpSRDROQ2p3dllURTZVMlZ5YVdGc2FYcGhZbXhsU1dRK0RRbzhMMU5QUVZBdFJVNVdPa0p2WkhrK0RRbzhMMU5QUVZBdFJVNVdPa1Z1ZG1Wc2IzQmxQZzBLPC9CYXNlLTAtMF9EYXRhPg0KPEJhc2UtMC0wX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMC0wX0hhc05lc3RlZERhdGE+DQo8L2ExOkNhbGxTaXRlX3gwMDJCX1RyYWNlU2VyaWFsaXNlckhlbHBlcj4NCjwvU09BUC1FTlY6Qm9keT4NCjwvU09BUC1FTlY6RW52ZWxvcGU+DQo=</CallsiteTraceData>
      <CallsiteTraceData>PFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOlNPQVAtRU5DPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIiB4bWxuczpjbHI9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc29hcC9lbmNvZGluZy9jbHIvMS4wIiBTT0FQLUVOVjplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyI+DQo8U09BUC1FTlY6Qm9keT4NCjxhMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXIgaWQ9InJlZi0xIiB4bWxuczphMT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbHIvbnNhc3NlbS9Qcm90b0NvcmUvUHJvdG9Db3JlJTJDJTIwVmVyc2lvbiUzRDAuOC4yLjIzOTIlMkMlMjBDdWx0dXJlJTNEbmV1dHJhbCUyQyUyMFB1YmxpY0tleVRva2VuJTNEbnVsbCI+DQo8TnVtYmVyT2ZFbGVtZW50cz4xPC9OdW1iZXJPZkVsZW1lbnRzPg0KPEJhc2UtMF9IYXNEYXRhPmZhbHNlPC9CYXNlLTBfSGFzRGF0YT4NCjxCYXNlLTBfSGFzTmVzdGVkRGF0YT50cnVlPC9CYXNlLTBfSGFzTmVzdGVkRGF0YT4NCjxCYXNlLTBfTmVzdGVkRGF0YUNvdW50PjE8L0Jhc2UtMF9OZXN0ZWREYXRhQ291bnQ+DQo8QmFzZS0wLTBfSGFzRGF0YT50cnVlPC9CYXNlLTAtMF9IYXNEYXRhPg0KPEJhc2UtMC0wX0RhdGEgaWQ9InJlZi0zIj5QRk5QUVZBdFJVNVdPa1Z1ZG1Wc2IzQmxJSGh0Ykc1ek9uaHphVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRXRhVzV6ZEdGdVkyVWlJSGh0Ykc1ek9uaHpaRDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRWlJSGh0Ykc1ek9sTlBRVkF0UlU1RFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJaUI0Yld4dWN6cGpiSEk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmMyOWhjQzlsYm1OdlpHbHVaeTlqYkhJdk1TNHdJaUJUVDBGUUxVVk9WanBsYm1OdlpHbHVaMU4wZVd4bFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJK0RRbzhVMDlCVUMxRlRsWTZRbTlrZVQ0TkNqeGhNVHBUWlhKcFlXeHBlbUZpYkdWSlpDQnBaRDBpY21WbUxURWlJSGh0Ykc1ek9tRXhQU0pvZEhSd09pOHZjMk5vWlcxaGN5NXRhV055YjNOdlpuUXVZMjl0TDJOc2NpOXVjMkZ6YzJWdEwxSmxkbWwwVTJWeWRtbGpaWE11VUdWeWMybHpkR1Z1WTJVdlVtVjJhWFJUWlhKMmFXTmxjeVV5UXlVeU1GWmxjbk5wYjI0bE0wUXdMamd1TWk0eU16a3lKVEpESlRJd1EzVnNkSFZ5WlNVelJHNWxkWFJ5WVd3bE1rTWxNakJRZFdKc2FXTkxaWGxVYjJ0bGJpVXpSRzUxYkd3aVBnMEtQSE4wY21sdVowbEVJR2xrUFNKeVpXWXRNeUkrWWpJNFpHSmpNak10T0RWaU1TMDBOR1V6TFdJd1pEY3RNbUU0TURaa1pESXlOakpoTFRBd01qUmxaRE15UEM5emRISnBibWRKUkQ0TkNqeHBiblJKUkQ0eU5ESXdNREU0UEM5cGJuUkpSRDROQ2p3dllURTZVMlZ5YVdGc2FYcGhZbXhsU1dRK0RRbzhMMU5QUVZBdFJVNVdPa0p2WkhrK0RRbzhMMU5QUVZBdFJVNVdPa1Z1ZG1Wc2IzQmxQZzBLPC9CYXNlLTAtMF9EYXRhPg0KPEJhc2UtMC0wX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMC0wX0hhc05lc3RlZERhdGE+DQo8L2ExOkNhbGxTaXRlX3gwMDJCX1RyYWNlU2VyaWFsaXNlckhlbHBlcj4NCjwvU09BUC1FTlY6Qm9keT4NCjwvU09BUC1FTlY6RW52ZWxvcGU+DQo=</CallsiteTraceData>
    </NodeTraceData>
  </SessionTraceData>
</Workspace>