<Workspace Version="2.0.0.3911" X="70.2321803661739" Y="-234.578576185826" zoom="0.938335517881513" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="0644004e-20cb-4f39-b842-54ee8f258d3f" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Directory.Contents" x="538" y="288" isVisible="true" isUpstreamVisible="true" lacing="Longest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.IO.Directory.Contents@var,string">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <CoreNodeModels.Input.StringInput guid="08d76bab-3fbf-4bd1-b844-f4cc6210aa6c" type="CoreNodeModels.Input.StringInput" nickname="String" x="82.4" y="288.8" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.String>C:\Users\giovanni.brogiolo\Dropbox\QTO\1b2</System.String>
      <System.String value="C:\Users\giovanni.brogiolo\Dropbox\QTO\1b2" />
    </CoreNodeModels.Input.StringInput>
    <CoreNodeModels.Input.DirectoryObject guid="1790b4ba-64ed-48c6-a1b4-ac35d17cfcc6" type="CoreNodeModels.Input.DirectoryObject" nickname="Directory.FromPath" x="316" y="284.8" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
    </CoreNodeModels.Input.DirectoryObject>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="db012493-4e8a-4ab3-b6d2-d7aaffe99e1f" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="ImportExport.ImportCSV" x="899.909115205333" y="305.979995692456" isVisible="true" isUpstreamVisible="true" lacing="Longest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.ImportExport.ImportCSV@string,bool">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <CoreNodeModels.Input.StringInput guid="e7f80b41-c218-4fbe-9a8f-8a2f13706783" type="CoreNodeModels.Input.StringInput" nickname="String" x="1615.34829110013" y="189.880451930791" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.String>C:\Users\giovanni.brogiolo\Dropbox\1B2.xls</System.String>
      <System.String value="C:\Users\giovanni.brogiolo\Dropbox\1B2.xls" />
    </CoreNodeModels.Input.StringInput>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="4ed609f1-437c-4c0c-9259-077730c5efcd" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Excel.WriteToFile" x="1996.17270648585" y="328.108923149548" isVisible="true" isUpstreamVisible="true" lacing="Longest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSOffice.dll" function="DSOffice.Excel.WriteToFile@string,string,int,int,var[][],bool">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
      <PortInfo index="4" default="False" />
      <PortInfo index="5" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="6fa35ffc-93ab-4842-a552-bc8fd529a5d1" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1150.88260970525" y="258.155478987778" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;Sheet3&quot;;" ShouldFocus="false">
      <OutPortInfo LineIndex="0" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="7f7151a8-d7ef-4635-8113-7bb9c8dcb14e" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1449.32205005989" y="780.261772800322" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" CodeText="&quot;1B2&quot;;" ShouldFocus="false">
      <OutPortInfo LineIndex="0" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="e5acb8f8-5bec-4dcf-a9f4-b5138d670e5a" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.AddItemToFront" x="1668.19824035134" y="619.913150695353" isVisible="true" isUpstreamVisible="true" lacing="Auto" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.List.AddItemToFront@var[]..[],var[]..[]">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" useLevels="True" level="2" shouldKeepListStructure="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="0eabe6b3-a857-45e6-9c8f-34a97deb6c08" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1781" y="513.596783840402" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="false;" ShouldFocus="false">
      <OutPortInfo LineIndex="0" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="a2e0140d-0e83-4cbf-ad8c-4ef9837bd692" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1696" y="406" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="0;" ShouldFocus="false">
      <OutPortInfo LineIndex="0" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="c58e1842-9046-4f65-805e-fd033fefe55b" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.Count" x="1145.17241558305" y="908.431540200365" isVisible="true" isUpstreamVisible="true" lacing="Auto" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="DSCoreNodes.dll" function="DSCore.List.Count@var[]..[]">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="331e0cd8-2a4f-4f64-bb3d-33c990e4cfa9" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1400" y="405" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" CodeText="0..a;" ShouldFocus="false">
      <PortInfo index="0" default="False" name="a" />
      <OutPortInfo LineIndex="0" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="d2a925f8-e2b6-419b-ac6e-576ef90339ec" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="Read Excel" x="857.634577577309" y="744.295915014862" isVisible="true" isUpstreamVisible="true" lacing="Auto" isSelectedInput="False" IsFrozen="false" isPinned="true">
      <PortInfo index="0" default="True" />
      <PortInfo index="1" default="True" />
      <PortInfo index="2" default="True" />
      <PortInfo index="3" default="True" />
      <PortInfo index="4" default="True" />
      <PortInfo index="5" default="True" />
      <ID value="6cf7f3b9-69ab-40da-b41c-62068370e1b8" />
      <Name value="Read Excel" />
      <Description value="This node will read an excel file. You can read an entore sheet contents, read from specific origin cell, read only specific range, or do all of the former for multiple sheets at the same time. " />
      <Inputs>
        <Input value="filePath" />
        <Input value="runIt" />
        <Input value="sheetName" />
        <Input value="byColumn" />
        <Input value="origin" />
        <Input value="extent" />
      </Inputs>
      <Outputs>
        <Output value="OUT" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="923b55d9-40e3-4a7d-a994-0d3be5cc2607" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="378" y="811" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="1;" ShouldFocus="false">
      <OutPortInfo LineIndex="0" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="e7cb9ce1-0b42-4c86-9168-6aee135eefa7" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="103.26140096164" y="620.74264964347" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="a[5];" ShouldFocus="false">
      <PortInfo index="0" default="False" name="a" />
      <OutPortInfo LineIndex="0" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="3eecef8c-77fe-4766-baa1-0a3866a21f01" type="PythonNodeModels.PythonNode" nickname="Python Script" x="641.203711017531" y="817.148712738819" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="6">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
      <PortInfo index="4" default="False" />
      <PortInfo index="5" default="False" />
      <Script># Copyright(c) 2016, David Mans, Konrad Sobon
# @arch_laboratory, http://archi-lab.net, http://neoarchaic.net

import clr
import sys
import System
from System import Array
from System.Collections.Generic import *

clr.AddReferenceByName('Microsoft.Office.Interop.Excel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c')
from Microsoft.Office.Interop import Excel
System.Threading.Thread.CurrentThread.CurrentCulture = System.Globalization.CultureInfo("en-US")
from System.Runtime.InteropServices import Marshal

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

from os import path
assemblies = System.AppDomain.CurrentDomain.GetAssemblies()
path1 = [a.Location for a in assemblies if 'bbIcons,' in a.FullName][0]
path2 = System.IO.Path.GetDirectoryName(path1).rsplit('\\',1)[0]
bb_path = '%s\\extra\\' %path2
sys.path.append(bb_path)
import bumblebee as bb

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

filePath = IN[0]
runMe = IN[1]
sheetName = IN[2]
byColumn = IN[3]
origin = IN[4]
extent = IN[5]

if filePath != None:
	if filePath.GetType() == System.IO.FileInfo:
		filePath = filePath.FullName

def ReadData(ws, origin, extent, byColumn):

	rng = ws.Range[origin, extent].Value2
	if not byColumn:
		dataOut = [[] for i in range(rng.GetUpperBound(0))]
		for i in range(rng.GetLowerBound(0)-1, rng.GetUpperBound(0), 1):
			for j in range(rng.GetLowerBound(1)-1, rng.GetUpperBound(1), 1):
				dataOut[i].append(rng[i,j])
		return dataOut
	else:
		dataOut = [[] for i in range(rng.GetUpperBound(1))]
		for i in range(rng.GetLowerBound(1)-1, rng.GetUpperBound(1), 1):
			for j in range(rng.GetLowerBound(0)-1, rng.GetUpperBound(0), 1):
				dataOut[i].append(rng[j,i])
		return dataOut

def GetOrigin(ws, origin):
	if origin != None:
		origin = ws.Cells(bb.CellIndex(origin)[1], bb.CellIndex(origin)[0])
	else:
		origin = ws.Cells(ws.UsedRange.Row, ws.UsedRange.Column)
	return origin

def GetExtent(ws, extent):
	if extent != None:
		extent = ws.Cells(bb.CellIndex(extent)[1], bb.CellIndex(extent)[0])
	else:
		extent = ws.Cells(ws.UsedRange.Rows(ws.UsedRange.Rows.Count).Row, ws.UsedRange.Columns(ws.UsedRange.Columns.Count).Column)
	return extent

def SetUp(xlApp):
	# supress updates and warning pop ups
	xlApp.Visible = False
	xlApp.DisplayAlerts = False
	xlApp.ScreenUpdating = False
	return xlApp

def ExitExcel(xlApp, wb, ws):
	# clean up before exiting excel, if any COM object remains
	# unreleased then excel crashes on open following time
	def CleanUp(_list):
		if isinstance(_list, list):
			for i in _list:
				Marshal.ReleaseComObject(i)
		else:
			Marshal.ReleaseComObject(_list)
		return None
		
	xlApp.ActiveWorkbook.Close(False)
	xlApp.ScreenUpdating = True
	CleanUp([ws,wb,xlApp])
	return None

def LiveStream():
	try:
		xlApp = Marshal.GetActiveObject("Excel.Application")
		xlApp.Visible = True
		xlApp.DisplayAlerts = False
		return xlApp
	except:
		return None

live = False

if runMe:
	try:
		errorReport = None
		message = None
		if filePath == None:
			# run excel in live mode
			xlApp = LiveStream()
			live = True
		else:
			# run excel from file on disk
			xlApp = SetUp(Excel.ApplicationClass())
			if path.isfile(unicode(filePath)):
				xlApp.Workbooks.open(unicode(filePath))
			live = False				
		# get workbook
		wb = xlApp.ActiveWorkbook
		# get worksheet
		if sheetName == None:
			ws = xlApp.ActiveSheet
			dataOut = ReadData(ws, GetOrigin(ws, origin), GetExtent(ws, extent), byColumn)
			if not live:
				ExitExcel(xlApp, wb, ws)
		elif not isinstance(sheetName, list):
			ws = xlApp.Sheets(sheetName)
			dataOut = ReadData(ws, GetOrigin(ws, origin), GetExtent(ws, extent), byColumn)
			if not live:
				ExitExcel(xlApp, wb, ws)
		else:
			# process multiple sheets
			dataOut = []
			if isinstance(origin, list):
				if isinstance(extent, list):
					for index, (name, oValue, eValue) in enumerate(zip(sheetName, origin, extent)):
						ws = xlApp.Sheets(str(name))
						dataOut.append(ReadData(ws, GetOrigin(ws, oValue), GetExtent(ws, eValue), byColumn))
				else:
					for index, (name, oValue) in enumerate(zip(sheetName, origin)):
						ws = xlApp.Sheets(str(name))
						dataOut.append(ReadData(ws, GetOrigin(ws, oValue), GetExtent(ws, extent), byColumn))
			else:
				if isinstance(extent, list):
					for index, (name, eValue) in enumerate(zip(sheetName, extent)):
						ws = xlApp.Sheets(str(name))
						dataOut.append(ReadData(ws, GetOrigin(ws, origin), GetExtent(ws, eValue), byColumn))
				else:
					for index, name in enumerate(sheetName):
						ws = xlApp.Sheets(str(name))
						dataOut.append(ReadData(ws, GetOrigin(ws, origin), GetExtent(ws, extent), byColumn))
			if not live:
				ExitExcel(xlApp, wb, ws)	
	except:
		xlApp.Quit()
		Marshal.ReleaseComObject(xlApp)
		# if error accurs anywhere in the process catch it
		import traceback
		errorReport = traceback.format_exc()
		pass
else:
	errorReport = "Set RunMe to True."

#Assign your output to the OUT variable
if errorReport == None:
	OUT = dataOut
else:
	OUT = errorReport</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="ba09ead9-f7ee-4317-b105-b7bcc16883cc" type="PythonNodeModels.PythonNode" nickname="Python Script" x="330.07618444737" y="531.712160046662" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script># Copyright(c) 2016, David Mans, Konrad Sobon
# @arch_laboratory, http://archi-lab.net, http://neoarchaic.net

import clr
import sys
import System
from System import Array
from System.Collections.Generic import *

clr.AddReferenceByName('Microsoft.Office.Interop.Excel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c')
from Microsoft.Office.Interop import Excel
System.Threading.Thread.CurrentThread.CurrentCulture = System.Globalization.CultureInfo("en-US")
from System.Runtime.InteropServices import Marshal

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

from os import path
assemblies = System.AppDomain.CurrentDomain.GetAssemblies()
path1 = [a.Location for a in assemblies if 'bbIcons,' in a.FullName][0]
path2 = System.IO.Path.GetDirectoryName(path1).rsplit('\\',1)[0]
bb_path = '%s\\extra\\' %path2
sys.path.append(bb_path)
import bumblebee as bb

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

filePath = IN[0]
runMe = IN[1]

if filePath != None:
	if filePath.GetType() == System.IO.FileInfo:
		filePath = filePath.FullName

def SetUp(xlApp):
	# supress updates and warning pop ups
	xlApp.Visible = False
	xlApp.DisplayAlerts = False
	xlApp.ScreenUpdating = False
	return xlApp

def ExitExcel(xlApp, wb):
	# clean up before exiting excel, if any COM object remains
	# unreleased then excel crashes on open following time
	def CleanUp(_list):
		if isinstance(_list, list):
			for i in _list:
				Marshal.ReleaseComObject(i)
		else:
			Marshal.ReleaseComObject(_list)
		return None
		
	xlApp.ActiveWorkbook.Close(False)
	xlApp.ScreenUpdating = True
	CleanUp([wb,xlApp])
	return None

try:
	errorReport = None
	if runMe:
		message = None
		try:
			dataOut = []
			xlApp = SetUp(Excel.ApplicationClass())
			if path.isfile(unicode(filePath)):
				xlApp.Workbooks.open(unicode(filePath))
				wb = xlApp.ActiveWorkbook
				for i in range(0, xlApp.Sheets.Count, 1):
					dataOut.append(xlApp.Sheets(i+1).Name)
			ExitExcel(xlApp, wb)
		except:
			xlApp.Quit()
			Marshal.ReleaseComObject(xlApp)
			pass
	else:
		errorReport = "Set RunMe to True."
except:
		# if error accurs anywhere in the process catch it
		import traceback
		errorReport = traceback.format_exc()

#Assign your output to the OUT variable
if errorReport == None:
	OUT = dataOut
else:
	OUT = errorReport</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.Filename guid="083b95cd-6d09-47e7-9bda-e8677684de32" type="CoreNodeModels.Input.Filename" nickname="File Path" x="118.686565212049" y="487.009782191289" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <System.String>QTO\Book1.xlsx</System.String>
      <HintPath>C:\Users\giovanni.brogiolo\Dropbox\QTO\Book1.xlsx</HintPath>
    </CoreNodeModels.Input.Filename>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="0644004e-20cb-4f39-b842-54ee8f258d3f" start_index="0" end="db012493-4e8a-4ab3-b6d2-d7aaffe99e1f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0644004e-20cb-4f39-b842-54ee8f258d3f" start_index="0" end="e7cb9ce1-0b42-4c86-9168-6aee135eefa7" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="08d76bab-3fbf-4bd1-b844-f4cc6210aa6c" start_index="0" end="1790b4ba-64ed-48c6-a1b4-ac35d17cfcc6" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1790b4ba-64ed-48c6-a1b4-ac35d17cfcc6" start_index="0" end="0644004e-20cb-4f39-b842-54ee8f258d3f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="db012493-4e8a-4ab3-b6d2-d7aaffe99e1f" start_index="0" end="c58e1842-9046-4f65-805e-fd033fefe55b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="db012493-4e8a-4ab3-b6d2-d7aaffe99e1f" start_index="0" end="e5acb8f8-5bec-4dcf-a9f4-b5138d670e5a" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6fa35ffc-93ab-4842-a552-bc8fd529a5d1" start_index="0" end="4ed609f1-437c-4c0c-9259-077730c5efcd" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7f7151a8-d7ef-4635-8113-7bb9c8dcb14e" start_index="0" end="e5acb8f8-5bec-4dcf-a9f4-b5138d670e5a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e5acb8f8-5bec-4dcf-a9f4-b5138d670e5a" start_index="0" end="4ed609f1-437c-4c0c-9259-077730c5efcd" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0eabe6b3-a857-45e6-9c8f-34a97deb6c08" start_index="0" end="4ed609f1-437c-4c0c-9259-077730c5efcd" end_index="5" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a2e0140d-0e83-4cbf-ad8c-4ef9837bd692" start_index="0" end="4ed609f1-437c-4c0c-9259-077730c5efcd" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c58e1842-9046-4f65-805e-fd033fefe55b" start_index="0" end="331e0cd8-2a4f-4f64-bb3d-33c990e4cfa9" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="331e0cd8-2a4f-4f64-bb3d-33c990e4cfa9" start_index="0" end="4ed609f1-437c-4c0c-9259-077730c5efcd" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="923b55d9-40e3-4a7d-a994-0d3be5cc2607" start_index="0" end="3eecef8c-77fe-4766-baa1-0a3866a21f01" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="923b55d9-40e3-4a7d-a994-0d3be5cc2607" start_index="0" end="ba09ead9-f7ee-4317-b105-b7bcc16883cc" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e7cb9ce1-0b42-4c86-9168-6aee135eefa7" start_index="0" end="3eecef8c-77fe-4766-baa1-0a3866a21f01" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="083b95cd-6d09-47e7-9bda-e8677684de32" start_index="0" end="ba09ead9-f7ee-4317-b105-b7bcc16883cc" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>