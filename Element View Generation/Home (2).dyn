<Workspace Version="0.9.1.4062" X="-734.844800697818" Y="-11.6262877116036" zoom="0.814670960832915" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap>
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <CoreNodeModels.Input.Filename guid="19cdfc75-fe43-4b46-b755-4342332147fa" type="CoreNodeModels.Input.Filename" nickname="File Path" x="219.665419076804" y="55.6850354221461" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.String>C:\Users\giovanni.brogioli\Desktop\Test.xlsx</System.String>
    </CoreNodeModels.Input.Filename>
    <CoreNodeModels.Input.FileObject guid="3130c60b-f378-41e1-808c-969d891b0ea2" type="CoreNodeModels.Input.FileObject" nickname="File.FromPath" x="541.5" y="70.5" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="16f85916-8293-4517-bd6f-cc0c17c35764" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="228" y="229" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;BEAM&quot;;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="306cbda5-cf71-43dd-b294-2d890dfb99b7" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.GetItemAtIndex" x="731.240951338101" y="310.734065989223" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.GetItemAtIndex@var[]..[],int" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="d2fd16bd-f8a9-48e0-8404-31549fd4759c" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="586.454660656877" y="339.859661642832" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="0;" ShouldFocus="false" />
    <CoreNodeModels.HigherOrder.Map guid="91ed48c7-7c92-454f-a36d-52e350372252" type="CoreNodeModels.HigherOrder.Map" nickname="List.Map" x="970.542658669269" y="195.256292939427" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="b3b44ab0-d00c-4291-8055-06be0158a217" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="500.675468265375" y="769.025270526724" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="view[0];" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="d51d4bfc-da1b-4b60-a30f-acded97bd44d" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="Key Schedule" x="348.005401055706" y="519.070224190666" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false">
      <ID value="9a1fadc6-3f7d-4684-80bb-c3de8b95727d" />
      <Name value="Key Schedule" />
      <Description value="This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. " />
      <Inputs>
        <Input value="ViewSchedule" />
        <Input value="Data" />
        <Input value="Parameter Names" />
        <Input value="UpperCase" />
      </Inputs>
      <Outputs>
        <Output value="ViewSchedule" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="34d42bfc-4399-4eab-9b02-6a66eef406c4" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1054.34163106474" y="761.858913879395" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="{&quot;Key Name&quot;,&quot;test1&quot;,&quot;test2&quot;,&quot;test3&quot;,&quot;test4&quot;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="1dba7372-e79a-43d8-b754-920a056161d0" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="Get All Views" x="138.683453255094" y="448.430849154183" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="True" IsFrozen="false">
      <ID value="b4f3c852-454e-4648-b8d6-2c8bfe20fdb7" />
      <Name value="Get All Views" />
      <Description value="This node will query all views in the model and return them based on category" />
      <Inputs />
      <Outputs>
        <Output value="Renderings" />
        <Output value="Pressure Loss Reports" />
        <Output value="Panel Schedules" />
        <Output value="Walkthroughs" />
        <Output value="Elevations" />
        <Output value="Drawing Sheets" />
        <Output value="Drafting Views" />
        <Output value="Undefined Views" />
        <Output value="Details" />
        <Output value="Loads Reports" />
        <Output value="Cost Reports" />
        <Output value="Legends" />
        <Output value="3D Views" />
        <Output value="Column Schedules" />
        <Output value="Internal Views" />
        <Output value="Sections" />
        <Output value="Ceiling Plans" />
        <Output value="Floor Plans" />
        <Output value="Schedules" />
        <Output value="Area Plans" />
        <Output value="Engineering Plans" />
        <Output value="Reports" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="16a9d40c-1047-444f-8a02-051c315b5d0a" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Excel.ReadFromFile" x="775.587192774432" y="37.0704862050729" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSOffice.dll" function="DSOffice.Excel.ReadFromFile@var,string,bool">
      <PortInfo index="2" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="f338f357-4e42-4f1e-bd4f-83589385aa16" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Name" x="769.179710485504" y="620.151374497424" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.Name" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="a9ecaa16-6b4b-4321-83cb-2fbafefdb637" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Output" x="2167.68568060724" y="637.723031885321" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="ViewSchedule;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="de3fb218-28e4-4809-a7ee-9243517eaf67" type="PythonNodeModels.PythonNode" nickname="Python Script" x="2001.19704662975" y="638.280889814041" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="4">
      <Script>#Copyright(c) 2015, Konrad Sobon
# @arch_laboratory, http://archi-lab.net

import clr
import sys
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

from System.Collections.Generic import *

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)
import re

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

keySchedule = UnwrapElement(IN[0])
data = IN[1]
inputParams = IN[2]
upper = IN[3]

# "Start" the transaction
TransactionManager.Instance.EnsureInTransaction(doc)

tableData = keySchedule.GetTableData()
sectionData = tableData.GetSectionData(SectionType.Body)

keyNames = []
for i in range(1,sectionData.NumberOfRows - 1,1):
	keyNames.append(str(int(i)))

allKeys = FilteredElementCollector(doc).WhereElementIsNotElementType()
params = [[] for i in range(len(keyNames))]
test = []
for key in allKeys:
	try:
		if key.get_Parameter(BuiltInParameter.REF_TABLE_ELEM_NAME).AsString() in keyNames and key.OwnerViewId == keySchedule.Id:
			indexValue = keyNames.index(key.get_Parameter(BuiltInParameter.REF_TABLE_ELEM_NAME).AsString())
			for i in range(0, len(inputParams),1):
				params[indexValue].extend(key.GetParameters(str(inputParams[i])))
	except:
		pass

for i, j in zip(params, data):
	for param, value in zip(i,j):
		if isinstance(value, str):
			valueDecoded = value.decode('string_escape')
		else:
			if value == None:
				valueDecoded = " "
			else:
				valueDecoded = str(value).decode('string_escape')
		if upper:
			valueDecoded = valueDecoded.upper()
			param.Set(valueDecoded)
		else:
			param.Set(valueDecoded)


# "End" the transaction
TransactionManager.Instance.TransactionTaskDone()

#Assign your output to the OUT variable
OUT = keySchedule</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="b00ffed3-8085-4472-bfe0-b9a12fef50a2" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Input" x="1047.51893664148" y="975.961416400557" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="UpperCase:bool = false;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="2cbf8302-dea7-4e6c-b02a-1f24cc254b5f" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1820.36074844013" y="639.545087376093" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="3">
      <Script>#Copyright(c) 2015, Konrad Sobon
# @arch_laboratory, http://archi-lab.net

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

from System.Collections.Generic import *

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

keySchedule = UnwrapElement(IN[0])
data = IN[1]
inputParams = IN[2]

# "Start" the transaction
TransactionManager.Instance.EnsureInTransaction(doc)

test = []
count = []
cellParams = [[] for i in range(len(data))]
if any(isinstance(item, list) for item in data):
	# process list of lists
	for i in data:
		count.append(len(i))
	colCount = max(count)
	colAvailable = len(keySchedule.Definition.GetSchedulableFields())
	if colCount &gt; colAvailable:
		message = "Please add/remove parameters to/from schedule so that they match longest data set."
	else:
		tableData = keySchedule.GetTableData()
		sectionData = tableData.GetSectionData(SectionType.Body)
		if sectionData.NumberOfRows - 2 &lt;= len(data):
			# schedule by default will have 2 rows (A, B, C and Header Names)
			rowsToAdd = (len(data) - sectionData.NumberOfRows) + 2
			for i in range(0, rowsToAdd, 1):
				sectionData.InsertRow(0)
		else:
			# schedule when updating might already have too many rows 
			rowsToDelete = sectionData.NumberOfRows - 2 - len(data)
			for i in reversed(range(sectionData.NumberOfRows - rowsToDelete, sectionData.NumberOfRows, 1)):
				sectionData.RemoveRow(i)

# "End" the transaction
TransactionManager.Instance.TransactionTaskDone()

#Assign your output to the OUT variable
OUT = keySchedule</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="7a19fac9-2940-4d92-b13b-aa38e0c6876f" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Input" x="1522.66751411018" y="466.556023810322" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="ViewSchedule;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="99cd4e77-9133-4d31-b064-58727a1a638f" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Input" x="1113.15357960224" y="863.041540165389" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="{&quot;Key Name&quot;,&quot;test1&quot;,&quot;test2&quot;,&quot;test3&quot;,&quot;test4&quot;};" ShouldFocus="false" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="19cdfc75-fe43-4b46-b755-4342332147fa" start_index="0" end="3130c60b-f378-41e1-808c-969d891b0ea2" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3130c60b-f378-41e1-808c-969d891b0ea2" start_index="0" end="16a9d40c-1047-444f-8a02-051c315b5d0a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="16f85916-8293-4517-bd6f-cc0c17c35764" start_index="0" end="16a9d40c-1047-444f-8a02-051c315b5d0a" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="306cbda5-cf71-43dd-b294-2d890dfb99b7" start_index="0" end="91ed48c7-7c92-454f-a36d-52e350372252" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d2fd16bd-f8a9-48e0-8404-31549fd4759c" start_index="0" end="306cbda5-cf71-43dd-b294-2d890dfb99b7" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b3b44ab0-d00c-4291-8055-06be0158a217" start_index="0" end="f338f357-4e42-4f1e-bd4f-83589385aa16" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b3b44ab0-d00c-4291-8055-06be0158a217" start_index="0" end="2cbf8302-dea7-4e6c-b02a-1f24cc254b5f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1dba7372-e79a-43d8-b754-920a056161d0" start_index="18" end="b3b44ab0-d00c-4291-8055-06be0158a217" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="16a9d40c-1047-444f-8a02-051c315b5d0a" start_index="0" end="2cbf8302-dea7-4e6c-b02a-1f24cc254b5f" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="16a9d40c-1047-444f-8a02-051c315b5d0a" start_index="0" end="de3fb218-28e4-4809-a7ee-9243517eaf67" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="de3fb218-28e4-4809-a7ee-9243517eaf67" start_index="0" end="a9ecaa16-6b4b-4321-83cb-2fbafefdb637" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b00ffed3-8085-4472-bfe0-b9a12fef50a2" start_index="0" end="de3fb218-28e4-4809-a7ee-9243517eaf67" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2cbf8302-dea7-4e6c-b02a-1f24cc254b5f" start_index="0" end="de3fb218-28e4-4809-a7ee-9243517eaf67" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="99cd4e77-9133-4d31-b064-58727a1a638f" start_index="0" end="2cbf8302-dea7-4e6c-b02a-1f24cc254b5f" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="99cd4e77-9133-4d31-b064-58727a1a638f" start_index="0" end="de3fb218-28e4-4809-a7ee-9243517eaf67" end_index="2" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-22.5613060172786" eyeY="30.0247481853852" eyeZ="76.8796457501799" lookX="17.5613060172786" lookY="-19.0247481853852" lookZ="-84.8796457501799" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>